<?php
/**
 * Orbit specific configuraiton.
 */
return array(
    // Elasticsearch server configuration
    'elasticsearch' => [
        // Can be multiple hosts
        'hosts' => [
            // Without HTTP authentication
            'http://localhost:9200'

            // With HTTP authentication
            // 'http://username:password@localhost:9200'
        ],

        // Number of retry when it fails
        'retries' => 2,

        // Path to CA Certificate, used when serving via HTTPS
        'cacert' => '/path/to/cacert.crt',

        // Prefix to access indices
        'indices_prefix' => 'v2x_',

        // List of indices that we have in Elasticsearch
        // All the query to the index name will be appended by prefix automatically
        'indices' => [
            'malldata' => [
                'index' => 'malls',
                'type'  => 'basic'
            ],

            'activities' => [
                'index' => 'activities',
                'type'  => 'activity'
            ],

            'coupons' => [
                'index' => 'coupons',
                'type'  => 'basic'
            ],

            'news' => [
                 'index' => 'news',
                 'type'  => 'basic'
            ],

            'promotions' => [
                 'index' => 'promotions',
                 'type'  => 'basic'
            ],

            'stores' => [
                 'index' => 'stores',
                 'type'  => 'basic'
            ],

            'coupon_suggestions' => [
                'index' => 'coupon_suggestions',
                'type'  => 'basic'
            ],

            'news_suggestions' => [
                 'index' => 'news_suggestions',
                 'type'  => 'basic'
            ],

            'promotion_suggestions' => [
                 'index' => 'promotion_suggestions',
                 'type'  => 'basic'
            ],

            'store_suggestions' => [
                 'index' => 'store_suggestions',
                 'type'  => 'basic'
            ],

            'mall_suggestions' => [
                 'index' => 'mall_suggestions',
                 'type'  => 'basic'
            ]
        ],

        // index list will be include in suggestion
        'suggestion_indices' => [
            'coupon_suggestions',
            'news_suggestions',
            'promotion_suggestions',
            'store_suggestions',
            'mall_suggestions'
        ],

        'nearest' => [
            'multiple' => 5,
            'max_try' => 10
        ],

        // The priority boost used in query
        'priority' => [

            'mall' => [
                'name'         => '^6',
                'object_type'  => '^5',
                'city'         => '^3',
                'province'     => '^2',
                'keywords'     => '',
                'address_line' => '',
                'country'      => '',
                'description'  => ''
            ],

            'news' => [
                'name'        => '^6',
                'object_type' => '^5',
                'keywords'    => '^4',
                'description' => '^3',
                'mall_name'   => '^3',
                'city'        => '^2',
                'province'    => '^2',
                'country'     => '^2'
            ],

            'promotions' => [
                'name'        => '^6',
                'object_type' => '^5',
                'keywords'    => '^4',
                'description' => '^3',
                'mall_name'   => '^3',
                'city'        => '^2',
                'province'    => '^2',
                'country'     => '^2'
            ],

            'coupons' => [
                'name'        => '^6',
                'object_type' => '^5',
                'keywords'    => '^4',
                'description' => '^3',
                'mall_name'   => '^3',
                'city'        => '^2',
                'province'    => '^2',
                'country'     => '^2'
            ],

            'store' => [
                'name'         => '^6',
                'object_type'  => '^5',
                'mall_name'    => '^4',
                'city'         => '^3',
                'province'     => '^2',
                'keywords'     => '',
                'address_line' => '',
                'country'      => '',
                'description'  => ''
            ]
        ]
    ],

    // db ip configuration
    'dbip' => [
        'connection_id' => 'dbip',
        'table' => 'july_2016'
    ],

    // Demo environtment
    'is_demo' => FALSE,

    // route names that need authentication to be accessed
    'blocked_routes' => [
        // all route names
        // 'ci-tenant-list',
        // 'ci-tenant-detail',
        // 'ci-service-list',
        // 'ci-service-detail',
        // 'ci-news-list',
        // 'ci-news-detail',
        // 'ci-promotion-list',
        // 'ci-promotion-detail',
        // 'ci-coupon-list',
        // 'ci-coupon-detail',
        // 'ci-coupon-detail-wallet',
        // 'ci-notification-list',
        // 'ci-notification-detail',
        // 'ci-my-account',
        // 'ci-luckydraw-list',
        // 'ci-luckydraw-detail',
        // 'ci-luckydraw-announcement',
        // 'ci-luckydrawnumber-download',
        // these home urls should not be blocked, as some of the code use these as default redirection point
        // 'ci-home', // -> /
        // 'ci-customer-home', // -> /customer/home
        // 'mobile-ci-home', // -> /customer
        // 'captive-request-internet', // -> /free internet

        // angular CI routes
        // 'customer-api-store-list',
        // 'customer-api-store-detail',
        // 'customer-api-promotion-list',
        // 'customer-api-promotion-detail',
        // 'customer-api-coupon-list',
        // 'customer-api-coupon-detail',
        // 'customer-api-news-list',
        // 'customer-api-news-detail',
        // 'customer-api-widget-list',
        // 'customer-api-service-list',
        // 'customer-api-service-detail',
        // 'customer-api-my-account',
        // 'customer-api-membership',

        // landing page routes
        // 'pub-store-list',
        // 'pub-mall-store-list',
        // 'pub-promotion-list',
        // 'pub-mall-promotion-list',
        // 'pub-news-list',
        // 'pub-mall-news-list',
        // 'pub-coupon-list',
        // 'pub-mall-coupon-list',
        // 'pub-lucky-draw-list',
        // 'pub-mall-coupon-add-to-wallet',
        // 'pub-lucky-draw-list',
        // 'pub-lucky-draw-detail',
        // 'pub-lucky-draw-issue',
    ],

    // cdn path
    'cdn' => array(
        // Whether to use CDN or default URL for the uploaded files
        'enable_cdn' => FALSE,

        // Do we need to upload to CDN?
        'upload_to_cdn' => FALSE,

        // provider used
        'provider' => 'S3',

        // Queue name
        'queue_name' => 'cdn_upload',

        // CDN Provider
        'providers' => [
            // gotomalls as default when not using cdn
            'default' => [
                // Just dummy provider
                'name' => 'Gotomalls',

                // Name of the bucket or directory
                'bucket_name' => NULL,

                'url_prefix' => 'https://mall-api.gotomalls.cool'
            ],

            // AWS S3
            'S3' => [
                // Name of the provider
                'name' => 'Amazon S3',

                // Name of the S3 bucket
                'bucket_name' => 'dev-dotcool',

                // Prefix of the CDN URL, without the bucket name (without trailing slash)
                // When saving to database this prefix should be concat with bucket name
                // and the path of the file. So the cdn_url field in table media has aboslute
                // url like: https://s3-ap-southeast-1.amazonaws.com/dev-dotcool/uploads/retailers/2016/01/some-file.jpg
                'url_prefix' => 'https://s3-ap-southeast-1.amazonaws.com'
            ]
        ]
    ),

    'assets' => array(
        // Asset root (without trailing slash)
        // leave undefined to work from app root
        // 'root' => 'http://assets.myorbit.com',

        // Every deployment which changes the CSS should also
        // change this value
        // 'timestamp' => '201608161427'
    ),

    // Languages that supported by orbit app
    'languages' => array('en', 'zh', 'ja', 'id'),

    'api' => array(
        'signature' => array(
                // How long signature should expires in seconds
                'expiration' => 60
        )
    ),

    // Captive Portal related configuration
    'captive' => array(
        // All unregistered traffic should be redirected to this domain
        'blackhole_domain'  => 'orbit.mall',

        // The URL which we redirect user to grant them internet access
        'base_grant_url' => 'https://n69.network-auth.com/splash/grant',

        // After the external captive portal grant internet, user should be
        // redirected to this URL. Leave empty for default Orbit behavior
        'user_continue_url' => '',

        // URL to check for internet connection
        'ping_url' => 'http://tools.pingdom.com/fpt/favicon.icox',

        // Delay for setTimeout before displaying the button for
        // getting internet connection, in seconds
        'delay_button' => 1.5,

        // Cookie for From Wifi
        'from_wifi'    => array(
            'name'      => 'from_wifi',

            // Expire time, should be set equals or higher than
            // SessionConifg.expire
            'expire' => 600,   // on second

            // Path of the cookie
            'path'      => '/',

            // domain
            'domain'    => NULL,

            // secure transfer via HTTPS only
            'secure'    => FALSE,

            // Deny access from client side script
            'httponly'  => TRUE
        ),
    ),

    // agreement configuration
    'agreement' => array(
        // This should be frontend URL not backend
        'mall'  => 'https://mall.gotomalls.cool/#/service-agreement?token=%s',
        'pmp'   => 'https://pmp.gotomalls.cool/?mode=pmp/#/service-agreement?token=%s'
    ),

    // Latitude and longitude of the user send by the frontend side
    'user_location' => array(
        'query_string' => array(
            // query string name for user location
            'name'      => 'ul',
        ),
        'cookie' => array(
            // cookie name for user location
            'name'      => 'ul',

            // additional time to refresh the user location cookie (in seconds)
            // each time Activity is saved
            'expire'    => 3600,
        ),
    ),

    'shop' => array(
        // Id of the retailer
        'id'    => NULL,
        // search result limit
        'search_limit' => 300,

        // Notification polling interval, in seconds.
        'poll_interval' => 8,

        // config to validate if membership number have to be unique or not
        'membership_number_unique_check' => false,

        //guest mode
        'guest_mode' => false,

        // Internet offline check
        'offline_check' => [
            'enable'    => FALSE,

            // enable must be true
            // in milliseconds
            'interval'  => 5000
        ],

        // enable/disable membership card pop up
        'membership' => true,

        // number of days to define the campaigns/tenants as "new" on widgets
        'widget_new_threshold' => 1, // in day(s)

        // number of seconds to delay the display of campaign pop up
        'event_delay' => 2.5, //in second(s)

        // after logout url (will be /customer if empty)
        'after_logout_url' => '',

        // back to map url
        'back_to_map_url' => 'https://www.gotomalls.cool/#/?redirect_ci=false',

        // after sign in social url
        'after_social_sign_in' => 'https://www.gotomalls.cool/#!/auth',

        // enable or disable the google analytics tracking
        'enable_google_analytics' => FALSE,

        // the google analytics ID, eg: UA-XXXXXXX-X
        'google_analytics_id' => '',

        // will be used to determine the domain in angular ci
        'main_domain' => 'gotomalls.cool',

        // will be used to determine the domain in mobile ci prefix dot, example: .gotomalls.cool
        'ci_domain' => '.gotomalls.cool',

        // Flag to displaying a popup the value are using callback
        'display_campaign_popup' => function($queryString) {
            // isset no_popup AND no_popup=yes => TRUE
            // isset no_popup AND no_popup!=yes => FALSE
            return ! (isset($queryString['no_popup']) && $queryString['no_popup'] === 'yes');
        },

        // Automatically add utm tracking in URL
        'append_utm_tracking_in_url' => FALSE,

        // tracked utm parameters
        'utm_parameters' => ['utm_source', 'utm_medium', 'utm_term', 'utm_content', 'utm_campaign'],

        // gotomalls landing page domain (used in shared url redirection in pub-fb-bot filter)
        // fill with: 'http://v27.gotomalls.cool' if in testing environment
        'gtm_url' => 'http://www.gotomalls.cool',
    ),

    // General contact data
    'contact_information' => array(
        'customer_service'  => array(
            'email' => 'support@myorbit.com',
            'name'  => 'Orbit Customer Service',
            'phone' => '+62123456789',
            'fax'   => '+62123456789',
            'office_hour'   => '9am - 6pm'
        ),
        'privacy_policy_url' => 'http://dominopos.com/privacy-policy.html',
        'terms_of_service_url' => 'http://dominopos.com/terms-and-conditions.html',
    ),

    // Lucky Draw
    'lucky_draw' => array(
        // Maximum LD number per issuance
        'max_per_issuance' => 1000,

        // batch number to issue lucky draw number on demand.
        'batch'  => 5,

        // lucky draw winning number config
        'winner' => array(
            // if TRUE then winner can have another prize on the same campaign
            'more_than_one_all_prize_enabled' => TRUE,

            // if TRUE then winner can have another same prize on the same campaign
            'more_than_one_single_prize_enabled' => TRUE,
        ),

        // no existing lucky draw custom message
        'custom_message' => '',
    ),

    // Default Pagination
    'pagination' => array(
        'per_page'      => 25,
        'max_record'    => 50,

        // Activity
        'activity' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Advert
        'advert' => array(
            'per_page'      => 10,
            'max_record'    => 20,
        ),

        // Country
        'country' => array(
            'per_page'      => 300,
            'max_record'    => 300,
        ),

        // Coupon
        'coupon' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Tenant Category
        'category' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Employee
        'employee' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Event
        'event' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Issued Coupon
        'issuedcoupon' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Merchant
        'merchant' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Merchant Tax
        'merchanttax' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Personal Interest
        'personal_interest' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Pos Quick Product
        'pos_quick_product' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Product
        'product' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Product attribute
        'product_attribute' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Product Category
        'product_category' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Promotion
        'promotion' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Retailer
        'retailer' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Role
        'role' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Setting
        'setting' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Token
        'token' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Transaction History
        'transaction_history' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // User
        'user' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Widget
        'widget' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // News
        'news' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Lucky Draw
        'lucky_draw' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Lucky Draw Number Receipt
        'lucky_draw_number_receipt' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Lucky Draw Number
        'lucky_draw_number' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Lucky Draw Prize
        'lucky_draw_prize' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Membership
        'membership' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Membership Number
        'membership_number' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // Inbox Notification
        'inbox' => array(
            'per_page'      => 15,
            'max_record'    => 100,
        ),

        // User Report
        'user_report' => array(
            'per_page'      => 15,
            'max_record'    => 100,
        ),

        // Mall list by geolocation
        'geo_location' => array(
            'per_page'      => 20,
            'max_record'    => 100,
        ),

        // link to tenant pagination
        'link_to_tenant' => array(
            'per_page'      => 50,
            'max_record'    => 1000,
        ),

        // account type pagination
        'account_type' => array(
            'per_page'      => 50,
            'max_record'    => 1000,
        ),

        // coupon location
        'coupon_location' => array(
            'per_page'      => 50,
            'max_record'    => 200,
        ),

        // Partner
        'partner' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // mall location
        'mall_location' => array(
            'per_page'      => 50,
            'max_record'    => 200,
        ),

        // affected group name
        'affected_group_name' => array(
            'per_page'      => 50,
            'max_record'    => 200,
        ),

        // you might also like
        'you_might_also_like' => array(
            'per_page'      => 4,
            'max_record'    => 4,
        ),

        // mall country
        'mall_country' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),

        // mall city
        'mall_city' => array(
            'per_page'      => 50,
            'max_record'    => 100,
        ),
    ),

    'reset_password' => array(
        'sender' => array(
            'email' => 'no-reply@gotomalls.com',
            'name'  => 'Gotomalls'
        ),

        // URL for password reset (frontend URL)
        'reset_base_url' => 'http://gotomalls.com/#/password/reset/%s?email=%s',

        // Number of days before token in reset link expires
        'reset_expire' => 7,
    ),

    'registration' => array(
        'mobile'    => array(
            // New role assigned to the user
            'role' => 'Consumer',

            // Status of the user
            'status' => 'pending',

            // Sender
            'sender' => array(
                'email' => 'no-reply@myorbit.com',
                'name'  => 'Orbit'
            ),

            // Activation URL
            // This should be frontend URL not backend
            'activation_base_url' => 'http://customer.orbit-mall.here/#/activate-account?token=%s',

            // GotoMalls URL (The New Mobile)
            'gotomalls_activation_base_url' => 'http://gotomalls.here/#/account/activate/%s?email=%s',

            // Setup Password URL
            // This should be frontend URL not backend
            'setup_new_password_url' => 'http://customer.orbit-mall.here/#/setup-new-password?token=%s',

            // Number of days the activation link will expires
            'activation_expire' => 365,

            // Sign in URL
            'signin_url' => 'http://orbit-mall.here/',

            // Fake registration means it does not save the data, only sends
            // the welcome email
            'fake'  => FALSE,

            // Flag to send welcome email
            'send_welcome_email'    => FALSE,

            'cloud_login_url' => 'http://orbit-mall.here/app/v1/customer/cloud-login'
        ),
    ),

    // Session related configuration
    'session' => array(
        /**
         * How long session will expire in seconds
         */
        'expire' => 3600,

        /**
         * Application list mapping for session
         */
        'app_list' => [
            'mobile_ci' => 'X-OMS-Mobile',
            'desktop_ci' => 'X-OMS-Mobile',
            'landing_page' => 'X-OMS-Mobile',

            // Non Customer
            'mall_portal' => 'X-OMS-Mall',
            'cs_portal' => 'X-OMS-CS',
            'pmp_portal' => 'X-OMS-PMP',
            'admin_portal' => 'X-OMS-Admin',
            'mdm_portal' => 'X-OMS-MDM',
        ],

        /**
         * Application ID mapping for session
         */
        'app_id' => [
            'mobile_ci' => '1',
            'desktop_ci' => '2',
            'landing_page' => '3',

            // Non Customer
            'mall_portal' => '4',
            'cs_portal' => '5',
            'pmp_portal' => '6',
            'admin_portal' => '7',
            'mdm_portal' => '8',
        ],

        /**
         * Path to write the session data
         *
         * - usage
         * Driver File => DIRECTORY
         * Driver Database => TABLE NAME
         * Driver Redis, Memcached, APC => NAMESPACE
         *
         * example:
         * FILE:
         * 'path' => sys_get_temp_dir() . DIRECTORY_SEPARATOR . 'orbit-session'
         * TABLE NAME:
         * 'path' => 'orb_sessions'
         * NAMESPACE:
         * 'path' => 'SESSIONS'
         */
        'path' => storage_path() . DIRECTORY_SEPARATOR . 'orbit-session',

        /**
         * Strict mode, will check the user agent and ip address
         */
        'strict' => TRUE,

        /**
         * Connection Information
         *
         * Example:
         *
         * DATABASE:
         * 'connection' => array(
         *     'driver'    => 'mysql',
         *     'host'      => 'localhost',
         *     'database'  => 'homestead',
         *     'username'  => 'homestead',
         *     'password'  => 'secret',
         *     'charset'   => 'utf8',
         *     'collation' => 'utf8_unicode_ci',
         *     'prefix'    => 'orbs_',
         * ),
         * or can be pass direct pdo connection
         * 'connection' => DB::connection()->getPdo(),
         *
         * REDIS:
         * 'connection' => array(
         *     'host'     => 'localhost',
         *     'port'     => 6379,
         *     'database' => 0,
         * ),
         * MEMCACHED:
         * 'connection' => array(
         *     array(
         *            'host' => 'localhost',
         *            'port' => 11211
         *     ),
         *     array(
         *            'host' => 'mem1.host',
         *            'port' => 11211
         *     ),
         * ),
         */
        'connection' => array(),

        /**
         * Session Driver
         */
        'driver' => 'file',

        /**
         * Session data available
         */
        'availability' => array(
            'header'        => TRUE,
            'query_string'  => TRUE,
            'cookie'        => TRUE,
        ),

        /**
         * Where is session data should be coming from
         */
        'session_origin' => array(
            'expire' => 62208000,
            // From HTTP Headers
            'header'  => array(
                'name'      => 'X-Orbit-Session'
            ),

            // From Query String
            'query_string' => array(
                'name'      => 'orbit_session'
            ),

            // From Cookie
            'cookie'    => array(
                'name'      => 'orbit_sessionx',

                // Expire time, should be set equals or higher than
                // SessionConifg.expire
                'expire' => 62208000,   // two years

                // Path of the cookie
                'path'      => '/',

                // domain
                'domain'    => NULL,

                // secure transfer via HTTPS only
                'secure'    => FALSE,

                // Deny access from client side script
                'httponly'  => TRUE
            ),
        ),

        /**
         * Where is session data should be coming from
         * @Todo: use this config instead
         */
        'origin' => array(
            'mobile_ci' => array(
                'expire' => 62208000,   // two years

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-Mobile'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-Mobile'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-Mobile',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => 'gotomalls.cool',

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),

            'desktop_ci' => array(
                'expire' => 62208000,   // two years

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-Mobile'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-Mobile'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-Mobile',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => 'gotomalls.cool',

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),

            'landing_page' => array(
                'expire' => 62208000,   // two years

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-Mobile'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-Mobile'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-Mobile',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => 'gotomalls.cool',

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),

            'admin_portal' => array(
                'expire' => 3600,   // 1 hour

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-Admin'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-Admin'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-Admin',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => NULL,

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),

            'mall_portal' => array(
                'expire' => 3600,   // 1 hour

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-Mall'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-Mall'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-Mall',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => NULL,

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),

            'cs_portal' => array(
                'expire' => 3600,   // 1 hour

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-CS'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-CS'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-CS',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => NULL,

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),

            'pmp_portal' => array(
                'expire' => 3600,   // 1 hour

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-PMP'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-PMP'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-PMP',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => NULL,

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),
            'mdm_portal' => array(
                'expire' => 3600,   // 1 hour

                // From HTTP Headers
                'header'  => array(
                    'name'      => 'X-OMS-MDM'
                ),

                // From Query String
                'query_string' => array(
                    'name'      => 'X-OMS-MDM'
                ),

                // From Cookie
                'cookie'    => array(
                    'name'      => 'X-OMS-MDM',

                    // Expire time, should be set equals or higher than
                    // SessionConifg.expire
                    'expire' => 62208000,   // two years

                    // Path of the cookie
                    'path'      => '/',

                    // domain
                    'domain'    => NULL,

                    // secure transfer via HTTPS only
                    'secure'    => FALSE,

                    // Deny access from client side script
                    'httponly'  => TRUE
                ),
            ),
        ),
    ),

    // Security related configuration
    'security' => array(
        // Super Admin Roles
        'superadmin' => array(
            'super admin',
        ),

        // list of allowed ip that can access mobile ci
        // to allow all ip address simply put string '*'
        'allowed_ips' =>  '*',

        'csrf' => array(
            // Use CSRF protection?
            'protect'   => TRUE,

            // Name of the form input field to store the token
            // available mode: `normal` and `angularjs`
            'mode'      => 'angularjs',

            // CSRF normal mode configuration
            'normal'    => array(
                'name'  => 'orbit_token'
            ),

            // CSRF AngularJS mode configuration
            // https://docs.angularjs.org/api/ng/service/$http
            'angularjs' => array(
                'name'              => 'orbit_token',
                'header_name'       => 'X-Orbit-Token',
                'header_name_php'   => 'HTTP_X_ORBIT_TOKEN',
            ),
        ),

        // CORS
        'cors' => [
            'allow_headers' => [
                'Origin',
                'Content-Type',
                'Accept',
                'Authorization',
                'X-Request-With',
                'X-Orbit-Signature',
                'Cookie',
                'Set-Cookie',
                'Set-X-Orbit-Session',
                'Orbit-Session',
                'Set-X-OMS-Mobile',
                'Set-X-OMS-Mall',
                'Set-X-OMS-Admin',
                'Set-X-OMS-PMP',
                'Set-X-OMS-CS',
                'Set-X-OMS-MDM',
            ],

            // No need protocol, just enter domain name
            // e.g: 'example.com' or 'sub.example.com'
            'allow_origin' => [
                'localhost',
                'gotomalls.cool',
                'thebreeze.v21.orbit-mall.rio'
            ],
            'allow_methods' => 'GET, POST',
            'allow_credentials' => 'true'
        ],

        // Firewall on Orbit Box
        'firewall'  => array(
            // Fake call means, no real call to the router
            'fake_call' => TRUE,

            // Command to register or deregister client Mac address
            'command'   => 'sudo /home/orbit/scripts/firewall/register_mac.sh'
        ),

        // Box management related commands
        'commands' => array(
            // The shutdown command, the caller should send the "shutdown"
            // string via STDIN
            'shutdown'  => 'sudo /home/orbit/scripts/helpers/shutdown.sh',

            // The reboot command, the caller should send the "reboot" string
            // via STDIN
            'reboot'    => 'sudo /home/orbit/scripts/helpers/shutdown.sh'
        ),

        // Email validity
        'email' => array(
            'fake_mx' => FALSE
        ),

        // string key to encrypt/decrypt coupon redemption url params
        // e.g: 'def0000022237f0cf69155b15e3d30811016dd7002d45d500fcd90e2b3c92a51019a0b15f6ef18db370853ece1833184bcf2d2fdf759085fe4d7b8a3e938f98d3029e5f4'
        'encryption_key' => 'def0000022237f0cf69155b15e3d30811016dd7002d45d500fcd90e2b3c92a51019a0b15f6ef18db370853ece1833184bcf2d2fdf759085fe4d7b8a3e938f98d3029e5f4',

        // encryption driver
        // e.g: 'mcrypt' or 'defuse-php'
        'encryption_driver' => 'defuse-php',
    ),

    'upload'    => array(
       'merchant'  => array(
            'logo' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/merchants/logo',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'picture' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/merchants/pictures',

                // Default HTML element name
                'name'          => 'pictures',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'map' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/merchants/maps',

                // Default HTML element name
                'name'          => 'maps',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'background' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/merchants/backgrounds',

                // Default HTML element name
                'name'          => 'backgrounds',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

        'mallgroup'  => array(
            'logo'  => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/mallgroups/logo',

                // Default HTML element name
                'name'          => 'logo',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

        ),

        'retailer'  => array(
            'logo'  => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/retailers/logo',

                // Default HTML element name
                'name'          => 'logo',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'picture' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/retailers/pictures',

                // Default HTML element name
                'name'          => 'pictures',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'map' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/retailers/maps',

                // Default HTML element name
                'name'          => 'maps',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'background' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/retailers/backgrounds',

                // Default HTML element name
                'name'          => 'backgrounds',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

        'mall'  => array(
            'logo'  => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/malls/logo',

                // Default HTML element name
                'name'          => 'logo',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'map' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/malls/maps',

                // Default HTML element name
                'name'          => 'maps',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

        ),

        // -------------------------------------------------------------------//
        // Product Related Uploads
        // -------------------------------------------------------------------//
        'product'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/product',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/product/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

        ),

        // -------------------------------------------------------------------//
        // Promotion Related Uploads
        // -------------------------------------------------------------------//
        'promotion'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/promotion',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/promotion/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

        // -------------------------------------------------------------------//
        // User Image Related Uploads
        // -------------------------------------------------------------------//
       'user'  => array(
            'profile_picture' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/users',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 500,
                        'height'    => 500
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'square' => array(
                        'width'     => 500,
                        'height'    => 500,
                    ),
                    'thumbnail' => array(
                        'width'     => 100,
                        'height'    => 100,
                    ),
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

        // -------------------------------------------------------------------//
        // Coupon Related Uploads
        // -------------------------------------------------------------------//
        'coupon'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/coupon',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/coupon/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

        // -------------------------------------------------------------------//
        // Event Related Uploads
        // -------------------------------------------------------------------//
        'event'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/event',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/event/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

        // -------------------------------------------------------------------//
        // Widget Related Uploads
        // -------------------------------------------------------------------//
        'widget'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/widgets',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 400,
                        'height'    => 400
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 500,
                        'height'    => 500,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/widgets/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

        ),

        // -------------------------------------------------------------------//
        // News Related Uploads
        // -------------------------------------------------------------------//
        'news'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/news',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 400,
                        'height'    => 400
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/news/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

        ),

        // -------------------------------------------------------------------//
        // Lucky Draw Related Uploads
        // -------------------------------------------------------------------//
        'lucky_draw'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/lucky-draws',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 400,
                        'height'    => 400
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/lucky-draws/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'announcement' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/lucky-draws/announcements',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 400,
                        'height'    => 400
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'announcement_translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/lucky-draws/announcements/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

        ),

        // -------------------------------------------------------------------//
        // Advert Related Uploads
        // -------------------------------------------------------------------//
        'advert'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 9000000,

                // The target path which file to be stored
                'path'          => 'uploads/advert',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 400,
                        'height'    => 400
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

        // -------------------------------------------------------------------//
        // Membership Related Uploads
        // -------------------------------------------------------------------//
        'membership'  => array(
            'main' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/membership',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 400,
                        'height'    => 400
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'translation' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/membership/translation',

                // Default HTML element name
                'name'          => 'image_translation',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => TRUE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 640,
                        'height'    => 480
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

        ),


        'base_store'  => array(
            'logo'  => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 9000000,

                // The target path which file to be stored
                'path'          => 'uploads/base_store/logo',

                // Default HTML element name
                'name'          => 'logo',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'picture' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/base_store/pictures',

                // Default HTML element name
                'name'          => 'pictures',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'map' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/base_store/maps',

                // Default HTML element name
                'name'          => 'maps',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'background' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/base_store/backgrounds',

                // Default HTML element name
                'name'          => 'backgrounds',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),


        // -------------------------------------------------------------------//
        // Partner Related Uploads
        // -------------------------------------------------------------------//
        'partner'  => array(
            'logo'  => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 9000000,

                // The target path which file to be stored
                'path'          => 'uploads/partner/logo',

                // Default HTML element name
                'name'          => 'logo',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),

            'image' => array(
                // Allowed Extension
                'file_type'     => array('jpg', 'png', 'jpeg', 'gif'),

                // Allowed Mimetype
                'mime_type'     => array('image/jpeg', 'image/png', 'image/gif'),

                // Maximum file size allowed in bytes
                'file_size'     => 90000,

                // The target path which file to be stored
                'path'          => 'uploads/partner/images',

                // Default HTML element name
                'name'          => 'images',

                // Force create directory when not exists
                'create_directory'  => TRUE,

                // Append year and month to the path
                'append_year_month' => FALSE,

                // Keeping the aspect ratio
                'keep_aspect_ratio' => TRUE,

                // Resize the image
                'resize_image'      => TRUE,

                // Crop the image
                'crop_image'        => TRUE,

                // Scale the image
                'scale_image'       => FALSE,

                // Name suffix of the generated image
                'suffix'            => '',

                // Resize the image
                'resize'        => array(
                    // Profile name
                    'default'   => array(
                        'width'     => 200,
                        'height'    => 200
                    )
                ),

                // Crop the image
                'crop'          => array(
                    // Profile name
                    'default' => array(
                        'width'     => 100,
                        'height'    => 100,
                    )
                ),

                // Scale the image in percent
                'scale'         => array(
                    // Profile name
                    'default'   => 50
                ),

                // Callback before saving the file
                'before_saving' => NULL,

                // Callback after saving the file
                'after_saving'  => NULL,
            ),
        ),

    ),

    'devices'  => array(
        'barcode'    => array(
            'path'   => '/home/dominopos1/drivers/64bits/barcode',
            'params' => '/dev/domino/scanner'
        ),

        'edc'        => array(
            'path'   => '/home/dominopos1/drivers/edc_ict220_V102/ict220',
            'params' => '/dev/ttyUSB0'
        ),

        'cdisplay'   => array(
            'path'   => '/home/dominopos1/drivers/64bits/cdisplay_newborn',
            'params' => '/dev/ttyACM0'
        ),

        'printer'    => array(
            'params' => '/dev/domino/printer'
        ),

        'cutpaper'   => array(
            'path'   => '/home/dominopos1/drivers/64bits/cut_paper'
        ),

        'cashdrawer' => array(
            'path'   => '/home/dominopos1/drivers/64bits/cash_drawer'
        ),

        'prepare_screen'    => array(
            'path'  => '/home/orbitadmin/scripts/helpers/screen-display.sh'
        )
    ),

    'social_login' => [
        'facebook' => [
            'app_id'        => '',
            'app_secret'    => '',
            'version'       => 'v2.4'
        ],
        'google' => array(
            'callback_url' => 'http://mall-api.gotomalls.cool/pub/social-google-callback',
        ),
        'bitly' => array(
            // bitly generic_access_token
            'generic_access_token' => NULL,
        )
    ],

    // set the external crawler user agent
    'social_crawler' => array(
        'facebook' => ['facebookexternalhit/1.1', 'Facebot']
    ),

    // The grouping of the following items is located in /app/config/orbit_activity.php
    // key   = db:activities.activity_name_long
    // value = alias
    'activity_columns' => array(
        'Network Check In'                             => 'Network Check In',
        'Network Check Out'                            => 'Network Check Out',
        'Sign Up via Mobile (Email Address)'           => 'Email Sign Up',
        'Sign Up via Mobile (Facebook)'                => 'Facebook Sign Up',
        'Sign Up via Mobile (Google+)'                 => 'Google Sign Up',
        'Sign Up via Customer Service'                 => 'Sign Up via CS',
        'Sign In'                                      => 'Sign In',
        'Read Activation Notification'                 => 'Read Activation Notification',
        'Customer Activation'                          => 'Customer Activation',
        'Sign Out'                                     => 'Sign Out',
        'View (Home Page)'                             => 'View Home Page',
        'Widget Click Tenant'                          => 'Widget Click Tenant',
        'View Tenant List'                             => 'View Tenant List',
        'View Tenant Detail'                           => 'View Tenant Detail',
        'Widget Click Promotion'                       => 'Widget Click Promotion',
        'View Promotion Pop Up'                        => 'View Promotion Pop Up',
        'Click Promotion Pop Up'                       => 'Click Promotion Pop Up',
        'View Promotion List'                          => 'View Promotion List',
        'View Promotion Tenant List'                   => 'View Promotion Tenant List',
        'View Promotion Detail'                        => 'View Promotion Detail',
        'Widget Click News'                            => 'Widget Click News',
        'View News Pop Up'                             => 'View News Pop Up',
        'Click News Pop Up'                            => 'Click News Pop Up',
        'View News List'                               => 'View News List',
        'View News Tenant List'                        => 'View News Tenant List',
        'View News Detail'                             => 'View News Detail',
        'Widget Click Coupon'                          => 'Widget Click Coupon',
        'View Coupon Pop Up'                           => 'View Coupon Pop Up',
        'Click Coupon Pop Up'                          => 'Click Coupon Pop Up',
        'View Coupon List'                             => 'View Coupon List',
        'View Coupon Tenant List'                      => 'View Coupon Tenant List',
        'View Coupon Detail'                           => 'View Coupon Detail',
        'View Coupon Campaign Detail'                  => 'View Coupon Campaign Detail',
        'View Coupon Redemption Places'                => 'View Coupon Redemption Places',
        'Coupon Issuance'                              => 'Coupon Issued',
        'Read Coupon Issuance Notification'            => 'Read Coupon Issuance Notification',
        'Coupon Redemption (Successful)'               => 'Coupon Redeemed',
        'Widget Click Lucky Draw'                      => 'Widget Click Lucky Draw',
        'View Lucky Draw List'                         => 'View Lucky Draw List',
        'View Lucky Draw Detail'                       => 'View Lucky Draw Detail',
        'Lucky Draw Number Issuance'                   => 'Lucky Draw Number Issued',
        'Read Lucky Draw Number Issuance Notification' => 'Read Lucky Draw Number Issuance Notification',
        'View Winning Numbers & Prizes'                => 'View Prizes & Winning Numbers',
        'Read Winner Announcement Notification'        => 'Read Winner Announcement Notification',
        'Search'                                       => 'Search',
        'View My Account'                              => 'View My Account',
        'View Notification List'                       => 'View Notification List',
    ),

    'menus' => array(
        'mall' => array(
            'mall_dashboard',
            'mall_settings',
            'mall_widgets',
            'mall_tenants',
            'mall_luckydraws',
            'mall_employee',
            'mall_membership',
            'mall_crm_detail',
            'mall_crm_summary',
            'mall_consumer',
            'mall_user_report'
        ),
        'pmp' => array(
            'pmp_dashboard',
            'pmp_campaign_dashboard',
            'pmp_campaign_detail',
            'pmp_campaigns',
            'pmp_news',
            'pmp_coupons',
            'pmp_coupon_reports',
            'pmp_promotions',
            'pmp_report_news',
            'pmp_report_promotions',
            'pmp_employee',
            'pmp_advert'
        )
    ),

    'genders' => array(
        'M' => 'Male',
        'F' => 'Female',
        'U' => 'Unknown',
    ),

    'age_ranges' => array(
        '55 +',
        '45 - 54',
        '35 - 44',
        '25 - 34',
        '15 - 24',
        '0 - 14',
    ),

    'geo_location' => array(
        // distance of range
        'distance' => 10,
    ),

    'error_message' => array(
        'e500' => '<a href=http://gotomalls.com>gotomalls.com</a> is improving your user experience. Come back later.'
    ),

    // Block access to some end point
    'maintenance_mode' => [
        'crmsummary' => FALSE
    ],

    'generic_activity' => array(
        'parameter_name' => 'act',
        'activity_list' => array(
            // landing page activity list
            // - Successfully landed in Gotomalls
            '1' => array(
                'name' => 'view_landing_page',
                'name_long' => 'View Landing Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Clicking on a mall in result list
            '2' => array(
                'name' => 'click_mall_list',
                'name_long' => 'Click Mall List',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Mall',
                'parameter_name' => 'mall_id'
            ),
            // - Clicking on a mall pin on the map
            '3' => array(
                'name' => 'click_mall_pin',
                'name_long' => 'Click Mall Pin',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Mall',
                'parameter_name' => 'mall_id'
            ),
            // - Visiting a mall
            '4' => array(
                'name' => 'view_mall',
                'name_long' => 'View Mall',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => 'Mall',
                'parameter_name' => 'mall_id'
            ),
            // - Viewing mall info
            '5' => array(
                'name' => 'view_mall_info',
                'name_long' => 'View Mall Info',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => 'Mall',
                'parameter_name' => 'mall_id'
            ),
            // - Switching user
            '6' => array(
                'name' => 'click_not_me',
                'name_long' => 'Switch User',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // ** Main Page Widgets **
            // - Home Click
            '7' => array(
                'name' => 'click_home_main_page',
                'name_long' => 'Click Home Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Map Click
            '8' => array(
                'name' => 'click_map_main_page',
                'name_long' => 'Click Map Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Map View
            '9' => array(
                'name' => 'view_map_main_page',
                'name_long' => 'View Map Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Discover Click
            '10' => array(
                'name' => 'click_discover_main_page',
                'name_long' => 'Click Discover Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Discover View
            '11' => array(
                'name' => 'view_discover_main_page',
                'name_long' => 'View Discover Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Malls Click
            '12' => array(
                'name' => 'click_mall_main_page',
                'name_long' => 'Click Mall Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Malls View
            '13' => array(
                'name' => 'view_mall_main_page',
                'name_long' => 'View Mall Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Stores Click
            '14' => array(
                'name' => 'click_stores_main_page',
                'name_long' => 'Click Stores Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Stores View
            // *** Moved to the getStoreList() ***
            '15' => array(
                'name' => 'view_stores_main_page',
                'name_long' => 'View Stores Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Lucky Draws Click
            '16' => array(
                'name' => 'click_lucky_draws_main_page',
                'name_long' => 'Click Lucky Draws Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Lucky Draws View
            // *** Moved to the getSearchLuckyDraw() ***
            '17' => array(
                'name' => 'view_lucky_draws_main_page',
                'name_long' => 'View Lucky Draws Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - PokeMaps Click
            '18' => array(
                'name' => 'click_pokemaps_main_page',
                'name_long' => 'Click Pokemaps Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - PokeMaps View
            '19' => array(
                'name' => 'view_pokemaps_main_page',
                'name_long' => 'View Pokemaps Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // ** End Of Main Page Widgets **
            // - Clicking on a store in list
            '20' => array(
                'name' => 'click_store_list',
                'name_long' => 'Click Store List',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Tenant',
                'parameter_name' => 'store_id'
            ),
            // - Clicking on a lucky draw in list
            '21' => array(
                'name' => 'click_lucky_draw_list',
                'name_long' => 'Click Lucky Draw List',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'LuckyDraw',
                'parameter_name' => 'lucky_draw_id'
            ),
            // - Clicking on walkthrough page 1
            '22' => array(
                'name' => 'click_walkthrough',
                'name_long' => 'Click Walkthrough Page 1',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Clicking on walkthrough page 2
            '23' => array(
                'name' => 'click_walkthrough',
                'name_long' => 'Click Walkthrough Page 2',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Clicking on walkthrough page 3
            '24' => array(
                'name' => 'click_walkthrough',
                'name_long' => 'Click Walkthrough Page 3',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - News Click
            '25' => array(
                'name' => 'click_news_main_page',
                'name_long' => 'Click News Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - News View
            '26' => array(
                'name' => 'view_news_main_page',
                'name_long' => 'View News Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Clicking on a news in list
            '27' => array(
                'name' => 'click_news_list',
                'name_long' => 'Click News List',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'News',
                'parameter_name' => 'news_id'
            ),
            // - Promotion Click
            '28' => array(
                'name' => 'click_promotions_main_page',
                'name_long' => 'Click Promotions Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Promotions View
            '29' => array(
                'name' => 'view_promotions_main_page',
                'name_long' => 'View Promotions Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Clicking on a promotion in list
            '30' => array(
                'name' => 'click_promotion_list',
                'name_long' => 'Click Promotion List',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Promotion',
                'parameter_name' => 'promotion_id'
            ),
            // - Coupon Click
            '31' => array(
                'name' => 'click_coupons_main_page',
                'name_long' => 'Click Coupons Main Page',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Coupons View
            // *** Moved to the getCouponList() ***
            '32' => array(
                'name' => 'view_coupons_main_page',
                'name_long' => 'View Coupons Main Page',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Clicking on a coupon in list
            '33' => array(
                'name' => 'click_coupon_list',
                'name_long' => 'Click Coupon List',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),

            // - News Location View
            // *** Moved to the getNewsLocations() ***
            '34' => array(
                'name' => 'view_news_location',
                'name_long' => 'View News Location Page',
                'module_name' => 'News',
                'type' => 'view',
                'object_type' => 'News',
                'parameter_name' => 'news_id'
            ),
            // - Clicking on a news location
            '35' => array(
                'name' => 'click_news_location',
                'name_long' => 'Click News Location',
                'module_name' => 'News',
                'type' => 'click',
                'object_type' => 'News',
                'parameter_name' => 'news_id'
            ),

            // - Promotion Location View
            // *** Moved to the getPromotionLocations() ***
            '36' => array(
                'name' => 'view_promotion_location',
                'name_long' => 'View Promotion Location Page',
                'module_name' => 'Promotion',
                'type' => 'view',
                'object_type' => 'Promotion',
                'parameter_name' => 'promotion_id'
            ),
            // - Clicking on a promotion location
            '37' => array(
                'name' => 'click_promotion_location',
                'name_long' => 'Click Promotion Location',
                'module_name' => 'Promotion',
                'type' => 'click',
                'object_type' => 'Promotion',
                'parameter_name' => 'promotion_id'
            ),

            // - Coupon Location View
            // *** Moved to the getCouponLocations() ***
            '38' => array(
                'name' => 'view_coupon_location',
                'name_long' => 'View Coupon Location Page',
                'module_name' => 'Coupon',
                'type' => 'view',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - Clicking on a coupon location
            '39' => array(
                'name' => 'click_coupon_location',
                'name_long' => 'Click Coupon Location',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),

            // - Store Location View
            // *** Moved to the getMallDetailStore() ***
            '40' => array(
                'name' => 'view_store_location',
                'name_long' => 'View Store Location Page',
                'module_name' => 'Store',
                'type' => 'view',
                'object_type' => 'Tenant',
                'parameter_name' => 'store_id'
            ),
            // - Clicking on a store location
            '41' => array(
                'name' => 'click_store_location',
                'name_long' => 'Click Store Location',
                'module_name' => 'Store',
                'type' => 'click',
                'object_type' => 'Tenant',
                'parameter_name' => 'store_id'
            ),
            // - View send coupon to email page
            '42' => array(
                'name' => 'view_send_coupon_to_email_page',
                'name_long' => 'View Send Coupon to Email Page',
                'module_name' => 'Coupon',
                'type' => 'view',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - Clicking on my lucky number list
            '43' => array(
                'name' => 'click_my_lucky_number_list',
                'name_long' => 'Click My Lucky Number List',
                'module_name' => 'LuckyDraw',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),

            // - User clicks on "Events" from mall sidebar menu
            '44' => array(
                'name' => 'click_mall_menu_events',
                'name_long' => 'Click mall menu (Events)',
                'module_name' => 'News',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),

            // - User clicks on "See all" on event carousel in mall page
            '45' => array(
                'name' => 'click_see_all_mall_events',
                'name_long' => 'Click see all (Mall Events)',
                'module_name' => 'News',
                'type' => 'click',
                'object_type' => 'News',
                'parameter_name' => 'news_id'
            ),

            // - User clicks an event from mall event list page
            '46' => array(
                'name' => 'click_in_mall_event_list',
                'name_long' => 'Click event from mall event list',
                'module_name' => 'News',
                'type' => 'click',
                'object_type' => 'News',
                'parameter_name' => 'news_id'
            ),

            // - User clicks on one of the events featured in event carousel (mall page)
            '47' => array(
                'name' => 'click_mall_featured_event',
                'name_long' => 'Click mall featured event',
                'module_name' => 'News',
                'type' => 'click',
                'object_type' => 'News',
                'parameter_name' => 'news_id'
            ),

            // - User clicks on "Promotions" from mall sidebar menu
            '48' => array(
                'name' => 'click_mall_menu_promotions',
                'name_long' => 'Click mall menu (Promotions)',
                'module_name' => 'Promotion',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),

            // - User clicks on "See all" on promotion carousel in mall page
            '49' => array(
                'name' => 'click_see_all_mall_promotions',
                'name_long' => 'Click see all (Mall Promotions)',
                'module_name' => 'Promotion',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),

            // - User clicks a promotion from mall promotion list page
            '50' => array(
                'name' => 'click_in_mall_promotion_list',
                'name_long' => 'Click promotion from mall promotion list',
                'module_name' => 'Promotion',
                'type' => 'click',
                'object_type' => 'Promotion',
                'parameter_name' => 'promotion_id'
            ),

            // - User clicks on one of the promotions featured in promotion carousel (mall page)
            '51' => array(
                'name' => 'click_mall_featured_promotion',
                'name_long' => 'Click mall featured promotion',
                'module_name' => 'Promotion',
                'type' => 'click',
                'object_type' => 'Promotion',
                'parameter_name' => 'promotion_id'
            ),

            // - User clicks on "Lucky draws" from mall sidebar menu Gotomalls
            '52' => array(
                'name' => 'click_mall_menu_lucky_draws',
                'name_long' => 'Click mall menu (Lucky draws)',
                'module_name' => 'LuckyDraw',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on "See all" on lucky draw carousel in mall page
            '53' => array(
                'name' => 'click_see_all_mall_lucky_draws',
                'name_long' => 'Click see all (Mall Lucky Draws)',
                'module_name' => 'LuckyDraw',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks a lucky draw from mall lucky draw list page
            '54' => array(
                'name' => 'click_in_mall_lucky_draw_list',
                'name_long' => 'Click lucky draw from mall lucky draw list',
                'module_name' => 'LuckyDraw',
                'type' => 'click',
                'object_type' => 'LuckyDraw',
                'parameter_name' => 'lucky_draw_id'
            ),
            // - User clicks on one of the lucky draw featured in lucky draw carousel (mall page)
            '55' => array(
                'name' => 'click_mall_featured_lucky_draw',
                'name_long' => 'Click mall featured lucky draw',
                'module_name' => 'LuckyDraw',
                'type' => 'click',
                'object_type' => 'LuckyDraw',
                'parameter_name' => 'lucky_draw_id'
            ),
            // - View progressive sign in (name) pop up page
            '56' => array(
                'name' => 'view_prog_login_name',
                'name_long' => 'View progressive sign in (Name)',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User gives name in progressive sign in (name) pop up page
            '57' => array(
                'name' => 'prog_login_name_ok',
                'name_long' => 'Progressive sign in (Name)',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User does not give name or dismiss progressive sign in (name) pop up page
            '58' => array(
                'name' => 'prog_login_name_canceled',
                'name_long' => 'Progressive sign in (Name) canceled',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - View progressive sign in (email) pop up page
            '59' => array(
                'name' => 'view_prog_login_email',
                'name_long' => 'View progressive sign in (Email)',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User gives email in progressive sign in (email) pop up page
            '60' => array(
                'name' => 'prog_login_email_ok',
                'name_long' => 'Progressive sign in (Email)',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User does not give email or dismiss progressive sign in (email) pop up page
            '61' => array(
                'name' => 'prog_login_email_canceled',
                'name_long' => 'Progressive sign in (Email) canceled',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on "Coupons" from mall sidebar menu
            '62' => array(
                'name' => 'click_mall_menu_coupons',
                'name_long' => 'Click mall menu (Coupons)',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on "See all" on coupon carousel in mall page
            '63' => array(
                'name' => 'click_see_all_mall_coupons',
                'name_long' => 'Click see all (Mall Coupons)',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks a coupon from mall coupon list page
            '64' => array(
                'name' => 'click_in_mall_coupon_list',
                'name_long' => 'Click coupon from mall coupon list',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User clicks on one of the coupons featured in coupon carousel (mall page)
            '65' => array(
                'name' => 'click_mall_featured_coupon',
                'name_long' => 'Click mall featured coupon',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User clicks on "Stores" from mall sidebar menu
            '66' => array(
                'name' => 'click_mall_menu_stores',
                'name_long' => 'Click mall menu (Stores)',
                'module_name' => 'Store',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on "See all" on coupon carousel in mall page
            '67' => array(
                'name' => 'click_see_all_mall_stores',
                'name_long' => 'Click see all (Mall Stores)',
                'module_name' => 'Store',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks a store from mall store list page
            '68' => array(
                'name' => 'click_in_mall_store_list',
                'name_long' => 'Click store from mall store list',
                'module_name' => 'Store',
                'type' => 'click',
                'object_type' => 'Tenant',
                'parameter_name' => 'store_id'
            ),
            // - User clicks on one of the stores featured in store carousel (mall page)
            '69' => array(
                'name' => 'click_mall_featured_store',
                'name_long' => 'Click mall featured store',
                'module_name' => 'Store',
                'type' => 'click',
                'object_type' => 'Tenant',
                'parameter_name' => 'store_id'
            ),
            // - User clicks on mall sidebar menu
            '70' => array(
                'name' => 'click_mall_menu',
                'name_long' => 'Click mall menu',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on one of the news/event featured in mall carousel (top of mall page)
            '71' => array(
                'name' => 'click_mall_featured_carousel',
                'name_long' => 'Click mall featured carousel',
                'module_name' => 'News',
                'type' => 'click',
                'object_type' => 'News',
                'parameter_name' => 'news_id'
            ),

            // - User clicks on one of the promotion featured in mall carousel (top of mall page)
            '72' => array(
                'name' => 'click_mall_featured_carousel',
                'name_long' => 'Click mall featured carousel',
                'module_name' => 'Promotion',
                'type' => 'click',
                'object_type' => 'News',
                'parameter_name' => 'promotion_id'
            ),

            // - User clicks on one of the coupon featured in mall carousel (top of mall page)
            '73' => array(
                'name' => 'click_mall_featured_carousel',
                'name_long' => 'Click mall featured carousel',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - Click share button in detail page
            '74' => array(
                'name' => 'click_share',
                'name_long' => 'Click Share',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => '--SET BY object_type_parameter_name--',
                'object_type_parameter_name' => 'object_type',
                'parameter_name' => 'object_id'
            ),
            // - Click sharing platform e.g: Facebook, email, etc.
            '75' => array(
                'name' => 'click_share',
                'name_long' => 'Click Share Type',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => '--SET BY object_type_parameter_name--',
                'object_type_parameter_name' => 'object_type',
                'parameter_name' => 'object_id'
            ),
            // - User clicks back to Gotomalls home page
            '76' => array(
                'name' => 'click_back_to_GTM',
                'name_long' => 'Click back to Gotomalls',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Mall',
                'parameter_name' => 'mall_id'
            ),
            // - User clicks on "Mall info" from mall sidebar menu
            '77' => array(
                'name' => 'click_mall_menu_info',
                'name_long' => 'Click mall menu (Info)',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Mall',
                'parameter_name' => 'mall_id'
            ),
            // - User clicks on interested coupon
            '78' => array(
                'name' => 'click_interested',
                'name_long' => 'Click Interested',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User clicks on not interested coupon
            '79' => array(
                'name' => 'click_not_interested ',
                'name_long' => 'Click Not Interested',
                'module_name' => 'Coupon',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - The campaign appears in the carousel
            '80' => array(
                'name' => 'view_carousel',
                'name_long' => 'View Carousel',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => '--SET BY object_type_parameter_name--',
                'object_type_parameter_name' => 'object_type',
                'parameter_name' => 'object_id'
            ),
            // - User clicks on share us via Facebook/Email
            '81' => array(
                'name' => 'click_share_us',
                'name_long' => 'Click Share Us',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on Facebook/Instagram/Twitter icon in about us section
            '82' => array(
                'name' => 'click_social_media',
                'name_long' => 'Click GTM Social Media',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Clicking on a lucky draw location
            '83' => array(
                'name' => 'click_lucky_draw_location',
                'name_long' => 'Click Lucky Draw Location',
                'module_name' => 'LuckyDraw',
                'type' => 'click',
                'object_type' => 'LuckyDraw',
                'parameter_name' => 'lucky_draw_id'
            ),
            // - Lucky Draw Location View
            '84' => array(
                'name' => 'view_lucky_draw_location',
                'name_long' => 'View Lucky Draw Location Page',
                'module_name' => 'LuckyDraw',
                'type' => 'view',
                'object_type' => 'LuckyDraw',
                'parameter_name' => 'lucky_draw_id'
            ),
            // - User view the about us page
            '85' => array(
                'name' => 'view_about_us',
                'name_long' => 'View About Us',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Event click in the carousel
            '86' => array(
                'name' => 'click_carousel',
                'name_long' => 'Click Carousel',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => '--SET BY object_type_parameter_name--',
                'object_type_parameter_name' => 'object_type',
                'parameter_name' => 'object_id'
            ),
            // - User clicks on sidebar menu (Put Home, My Coupon, etc in notes)
            '87' => array(
                'name' => 'click_menu',
                'name_long' => 'Click Menu',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - View advertisement on banner.
            '88' => array(
                'name' => 'view_banner',
                'name_long' => 'View Banner',
                'module_name' => 'Application',
                'type' => 'view',
                'object_type' => 'Advert',
                'parameter_name' => 'advert_id'
            ),
            // - Click advertisement on banner.
            '89' => array(
                'name' => 'click_banner',
                'name_long' => 'Click Banner',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Advert',
                'parameter_name' => 'advert_id'
            ),
            // - Click blog item on homepage Gotomalls
            '90' => array(
                'name' => 'click_blog_link',
                'name_long' => 'Click Blog Link',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - Click category on homepage
            '91' => array(
                'name' => 'click_category',
                'name_long' => 'Click Category',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Category',
                'parameter_name' => 'category_id'
            ),
            // - User clicks on grab button in mall page.
            '92' => array(
                'name' => 'click_grab',
                'name_long' => 'Click Grab',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks OK to confirm grab.
            '93' => array(
                'name' => 'click_deeplink_confirm_ok',
                'name_long' => 'Click Deeplink Confirmation OK',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Partner',
                'parameter_name' => 'partner_id'
            ),
            // - User clicks Cancel to confirm grab.
            '94' => array(
                'name' => 'click_deeplink_confirm_canceled',
                'name_long' => 'Click Deeplink Confirmation Cancel',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Partner',
                'parameter_name' => 'partner_id'
            ),
            // - Usr clicks on a partner in homepage.
            '95' => array(
                'name' => 'click_partner',
                'name_long' => 'Click Partner',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Partner',
                'parameter_name' => 'partner_id'
            ),
            // - User clicks on deeplink button (Get App) on partner info page.
            '96' => array(
                'name' => 'click_deeplink',
                'name_long' => 'Click Deeplink',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Partner',
                'parameter_name' => 'partner_id'
            ),
            // - User clicks on button that redirect to our partner pre-filtered lists from partner info page.
            '97' => array(
                'name' => 'click_home_partner',
                'name_long' => 'Click Home Partner',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Partner',
                'parameter_name' => 'partner_id'
            ),
            // - User clicks on tabs menu (Promotions, Coupons, Stores, Malls, Events)
            '98' => array(
                'name' => 'click_tab_menu',
                'name_long' => 'Click Tab Menu',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on filter (Location, Category, Partner, Sort By)
            '99' => array(
                'name' => 'click_filter',
                'name_long' => 'Click Filter',
                'module_name' => 'Filter',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on get coupon
            '100' => array(
                'name' => 'click_get_coupon',
                'name_long' => 'Click Get Coupon',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User click cancel on choose location popup after clicking use
            '101' => array(
                'name' => 'click_cancel_use',
                'name_long' => 'Click Cancel Use',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User clicks on "Next" on choose location popup after clicking "✁ Use
            '102' => array(
                'name' => 'click_next_use',
                'name_long' => 'Click Next Use',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User clicks on "Go Back" on verification popup after clicking "Next"
            '103' => array(
                'name' => 'click_go_back_use',
                'name_long' => 'Click Go Back Use',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User clicks on "Use" button
            '104' => array(
                'name' => 'click_use',
                'name_long' => 'Click Use',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => 'Coupon',
                'parameter_name' => 'coupon_id'
            ),
            // - User clicks on expand category button on Homepage
            '105' => array(
                'name' => 'click_expand_category',
                'name_long' => 'Click Expand Category',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on three dots mobile menu
            '106' => array(
                'name' => 'click_mobile_menu',
                'name_long' => 'Click Mobile Menu',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on auto complete search result
            '107' => array(
                'name' => 'click_auto_complete_search',
                'name_long' => 'Click Auto Complete Search',
                'module_name' => 'Search',
                'type' => 'click',
                'object_type' => 'object_type',
                'parameter_name' => 'object_id'
            ),
            // - User clicks search button after entering keyword
            '108' => array(
                'name' => 'click_search',
                'name_long' => 'Click Search',
                'module_name' => 'Search',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            ),
            // - User clicks on one of the sign in mehod
            '109' => array(
                'name' => 'click_sign_in_method',
                'name_long' => 'Click Sign In Method',
                'module_name' => 'Application',
                'type' => 'click',
                'object_type' => null,
                'parameter_name' => null
            )
        ),
    ),

    'redirect_url_list' => array(
        /*
         *  // append these keys inside each type to record activity while redirecting user
         *  // eg:
         *  'activity_name' => 'click_blog',
         *  'activity_name_long' => 'Click Gotomalls Blog',
         *  'activity_module_name' => 'Application',
         *  'activity_type' => 'click',
        */
        'instagram' => array(
            'url' => 'https://www.instagram.com/gotomalls',
        ),
        'facebook' => array(
            'url' => 'https://www.facebook.com/Gotomalls.Indo',
        ),
        'blog' => array(
            'url' => 'https://blog.gotomalls.com',
        ),
    ),

    /**
     * Mailchimp service integration
     * http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/
     */
    'mailchimp' => [
        // Valid driver are 'mailchimp-faker' or 'mailchimp'.
        //
        // mailchimp-faker driver will not call the real API instead it write to the
        // log file.
        'driver' => 'mailchimp-faker',

        'drivers' => [
            // Real API Call
            'mailchimp' => [
                // This could be anything, as long as you fill it. Because mailchimp will ommit
                // this value.
                'api_user' => 'gotomalls',

                // The API key used to connect to mailchimp.
                'api_key' => 'YOUR_KEY',

                // The URL of the API and the version. The end point might be different
                // from one key to the other. Consult to the
                // http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#before-you-start
                'api_url' => 'https://us13.api.mailchimp.com/3.0/',

                // ID of the list which subscriber should be put when they are activated
                'list_id' => 'LIST_ID',
            ],

            // Fake service
            'mailchimp-faker' => [
                // Value does not matter
                'api_user' => 'gotomalls',

                // Value does not matter
                'api_key' => 'YOUR_KEY',

                // It should be path to some directory which can be written by the
                // PHP process. e.g laravel storage path
                'api_url' => storage_path() . '/mailchimp-faker',

                // ID of the list which subscriber should be put when they are activated
                'list_id' => 'orbit-list-1',
            ]
        ]
    ],

    /**
     * Configuration related with coupon
     */
    'coupon' => [
        // URL redemption page which should be on main page (not CI)
        // e.g: https://www.gotomalls.cool/#!/coupon-redemption?cid=%s&uid=%s
        'direct_redemption_url' => NULL,
        // URL coupon canvas
        // e.g: https://www.gotomalls.cool/#!/coupon-blasting?cid=%s&pid=%s
        'sms_direct_redemption_url' => NULL,
    ],

    'campaign_auto_email' => array(
        // example 'email_list' => array('oktaviano@domminopos.com', 'nabilla@gotomalls.com')
        'email_list' => array('marketing@dominopos.com'),
        'sender' => array(
            'email' => 'no-reply@gotomalls.com',
            'name'  => 'Gotomalls'
        ),
    ),

    /**
     * Configuration for share via email on campaign detail page
     */
    'campaign_share_email' => array(
        'sender' => array(
            'email' => 'no-reply@gotomalls.com',
            'name'  => 'Gotomalls'
        ),

        // subject of the email
        'subject' => '[%s] %s - Gotomalls.com',

        // base url of the campaign detail, needed for showing link on the email
        'news_detail_base_url' => 'https://v215.gotomalls.cool/#!/events/%s/%s',

        'promotion_detail_base_url' => 'https://v215.gotomalls.cool/#!/promotions/%s/%s',

        'coupon_detail_base_url' => 'https://v215.gotomalls.cool/#!/coupons/%s/%s',

        'store_detail_base_url' => 'https://v215.gotomalls.cool/#!/stores/%s/%s',
    ),

    /**
     * Configuration for share via email on sidebar GTM
     */
    'landingpage_share_email' => array(
        'sender' => array(
            'email' => 'no-reply@gotomalls.com',
            'name'  => 'Gotomalls'
        ),

        // subject of the email
        'subject' => 'Sudahkah anda mencoba Gotomalls.com?',

        // the share url
        'share_url' => 'https://www.gotomalls.com',

        // the video url
        'video_url' => 'https://www.youtube.com/watch?v=v7x-Avxb38E',
    ),

    /**
     * List of user agent rules used by UserAgent parser. This rules serve as additional rules
     * that already defined in MobileDetect class.
     */
    'user_agent_rules' => [
        // Returning the browser name
        'browser' => [
            'Opera' => 'Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+|Coast/[0-9.]+|Opera/[0-9.]+.*Presto|AppleWebKit/[0-9.]+.*Safari/[0-9]+.*OPR/[0-9]+|AppleWebKit/[0-9.]+.*OPiOS/[0-9]+',
            'UCBrowser' => 'UC.*Browser|UCWEB|UBrowser/[0-9.].* Safari',
            // It should come after UCBrowser or Opera Mobile because this pattern more generic and it will override the chrome if it put on top
            'Chrome' => '\bCrMo\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?|Chrome/.*Safari',
            // It should come after 'Chrome' because this pattern more generic than Chrome and it will override the chrome if it put on top
            'Android Browser' => 'Android [0-9.].*AppleWebKit.*Mobile Safari/',
            'Firefox' => 'fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|Firefox/[0-9]+',
            'Instagram Browser' => 'Instagram [0-9]*',
            'Facebook Browser' => 'FBAV/[0-9.]+',

            // Bots
            'GoogleBot' => 'GoogleBot/.*bot\.html|Google Keyword Suggestion|AdsBot-Google',
            'BingBot' => 'bingbot',
            'Slurp (Yahoo Bot)' => 'Slurp',
            'DuckDuckBot' => 'DuckDuckBot',
            'Baiduspider' => 'Baiduspider',
            'YandexBot' => 'YandexBot',
            'SogouBot' => '\bSogou\b',
            'Exabot' => '\bExabot\b',
            'FacebookBot' => 'facebot|facebookexternalhit',
            'AlexaBot' => 'ia_archiver',
            'Bot' => 'AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|TurnitinBot|Pingdom|YahooSeeker/M1A1-R2D2',

            'IE' => 'IEMobile|MSIEMobile|MSIE',
        ],

        // Returning the platform name
        'platform' => [
            'Bot' => '\bSogou\b|Baiduspider|DuckDuckBot|Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2',
        ],

        // Returning the device model
        'device_model' => [
            'Bot' => '\bSogou\b|Baiduspider|DuckDuckBot|Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2',
        ]
    ],

    'generic_email' => [
        'sender' => [
            'email' => 'no-reply@gotomalls.com',
            'name'  => 'Gotomalls'
            ]
    ],

    'sync' => [
        'store' => [
            // Email need to send before and after the sync process
            'email' => [
                'to' => ['marketing@dominopos.com'],

                'pre_sync' => [
                    'subject' => '[Sync Store] - Sync ID: {{SYNC_ID}} has been started by {{USER_EMAIL}}',
                ],

                'post_sync' => [
                    'subject' => '[Sync Store] - Sync ID: {{SYNC_ID}} started by {{USER_EMAIL}} has been completed.'
                ]
            ]
        ]
    ],

    /**
     * Calls to external service
     */
    'external_calls' => [
        'wordpress' => [
            'indonesia' => [
                // Driver of the HTTP client
                // Value: 'curl', 'fake'
                'driver' => 'curl',

                // The base URL of the blog, e.g: https://blog.example.com
                'base_blog_url' => NULL,

                // Number of posts to take
                'take' => 6,

                // Default image used when the post does not have image URL
                'default_image_url' => NULL,

                // Cache file location, the web hooks will write to this file
                'cache_file' => '../app/storage/wordpress/post-list-indonesia.json',

                // When post is made - Wordpress try to call Orbit URLs
                // For security reason we limit the IPs that able to hit
                // this URL
                // Value could be '*' (means all) or an array
                // e.g: ['127.0.0.1', '192.168.0/24']
                'web_hooks_allowed_ips' => '*'
            ],

            'singapore' => [
                // Driver of the HTTP client
                // Value: 'curl', 'fake'
                'driver' => 'curl',

                // The base URL of the blog, e.g: https://blog.example.com
                'base_blog_url' => NULL,

                // Number of posts to take
                'take' => 6,

                // Default image used when the post does not have image URL
                'default_image_url' => NULL,

                // Cache file location, the web hooks will write to this file
                'cache_file' => '../app/storage/wordpress/post-list-indonesia.json',

                // When post is made - Wordpress try to call Orbit URLs
                // For security reason we limit the IPs that able to hit
                // this URL
                // Value could be '*' (means all) or an array
                // e.g: ['127.0.0.1', '192.168.0/24']
                'web_hooks_allowed_ips' => '*'
            ]
        ]
    ],

    /**
     * Static placeholders
     */
    'statics' => array(
        'adverts' => array(
            'footer' => array(
                'image_url' => NULL,
                'link_url' => NULL,
                'title' => NULL,
            ),
        ),
    ),

    /**
     * Cache the DB result for the list
     */
    'cache' => [
        // Cache type
        'database' => [
            // Enable or disable the cache
            'enable' => TRUE,

            // Cache the result for X minutes
            'cache_ttl' => 15
        ],

        // Cache per context
        'context' => [
            'default' => [
                'enable' => FALSE,
                'cache_ttl' => 30,
            ],

            // promotion list specific cache setting
            'promotion-list' => [
                'enable' => TRUE,
                'cache_ttl' => 60
            ],

            // coupon list specific cache setting
            'coupon-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // store list specific cache setting
            'store-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // mall list specific cache setting
            'mall-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // event list specific cache setting
            'event-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // event location list specific cache setting
            'location-event-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // promotion location list specific cache setting
            'location-promotion-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // coupon location list specific cache setting
            'location-coupon-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // store location list specific cache setting
            'location-store-list' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],

            // location detection specific cache setting
            'location-detection' => [
                'enable' => FALSE,
                'cache_ttl' => 60
            ],
        ],
    ],

    /**
     * Campaign spending related configuration
     */
    'campaign_spending' => [
        // Update the campaign spending by recalculating
        // the campaign cost when it was saved
        'update_spending_on_save' => FALSE,

        // Update the campaign spending by recalculating
        // the campaign cost using artisan
        'update_spending_on_artisan' => TRUE
    ],

    // Hardcoded featured items
    'featured' => [
        // List of malls that need to be featured (put ontop of the others)
        'mall_ids' => [
        ]
    ],

    // mdm config
    'mdm' => [
        'synchronization' => [
            'chunk' => 50
        ]
    ],

    // partner config
    'partner' => [
        // exception behaviour for query in listing (ex: dompetku)
        'exception_behaviour' => [
            'partner_ids' => ['']
        ]
    ],

    // AWS PHP SDK Configuration. It will act as base configuration
    // for all client instance.
    'aws-sdk' => [
        // Default version
        'version' => 'latest',

        // Default region (Singapore)
        'region' => 'ap-southeast-1',

        // S3 specific configuration
        'S3' => [
            // Credentials for S3
            'credentials' => [
                // Access Key ID
                'key' => '',

                // Secret Key
                'secret' => '',
            ],

            // Region for S3
            'region' => 'ap-southeast-1',

            // Version for S3
            'version' => '2006-03-01'
        ]
    ],

    /**
     * Sitemap generator config
     */
    'sitemap' => array(
        'hashbang' => TRUE,
        'uri_properties' => array(
            'list' => array(
                'promotion' => array(
                    'uri' => 'promotions',
                    'changefreq' => 'daily',
                ),
                'event' => array(
                    'uri' => 'events',
                    'changefreq' => 'daily',
                ),
                'coupon' => array(
                    'uri' => 'coupons',
                    'changefreq' => 'daily',
                ),
                'store' => array(
                    'uri' => 'stores',
                    'changefreq' => 'daily',
                ),
                'mall' => array(
                    'uri' => 'malls',
                    'changefreq' => 'daily',
                ),
            ),
            'detail' => array(
                'promotion' => array(
                    'uri' => 'promotions/%s/%s',
                    'changefreq' => 'monthly',
                ),
                'event' => array(
                    'uri' => 'events/%s/%s',
                    'changefreq' => 'monthly',
                ),
                'coupon' => array(
                    'uri' => 'coupons/%s/%s',
                    'changefreq' => 'monthly',
                ),
                'store' => array(
                    'uri' => 'stores/%s/%s',
                    'changefreq' => 'monthly',
                ),
                'mall' => array(
                    'uri' => 'malls/%s/%s',
                    'changefreq' => 'weekly',
                ),
                'partner' => array(
                    'uri' => 'partner/%s/%s',
                    'changefreq' => 'weekly',
                ),
            ),
            'misc' => array(
                'home' => array(
                    'uri' => '',
                    'changefreq' => 'daily',
                ),
                'about' => array(
                    'uri' => 'about-us',
                    'changefreq' => 'monthly',
                ),
                'discover' => array(
                    'uri' => 'discover',
                    'changefreq' => 'monthly',
                ),
                'map' => array(
                    'uri' => 'map',
                    'changefreq' => 'weekly',
                ),
            ),
        ),
    ),

    // Social media account used for Gotomalls with deferent country
    'social_media_account' => [
        'country' => [
            'Indonesia' => [
                [
                    'social_media_name' => 'Facebook',
                    'url' => 'https://www.facebook.com/Gotomalls.Indo',
                ],
                [
                    'social_media_name' => 'Twitter',
                    'url' => 'https://twitter.com/gotomalls',
                ],
                [
                    'social_media_name' => 'Instagram',
                    'url' => 'https://www.instagram.com/gotomalls/',
                ],
            ],

            'Singapore' => [
                [
                    'social_media_name' => 'Facebook',
                    'url' => 'https://www.facebook.com/Gotomalls.Indo',
                ],
                [
                    'social_media_name' => 'Twitter',
                    'url' => 'https://twitter.com/gotomalls',
                ],
                [
                    'social_media_name' => 'Instagram',
                    'url' => 'https://www.instagram.com/gotomalls/',
                ],
            ],
        ]
    ],
);
