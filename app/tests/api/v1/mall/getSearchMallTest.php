<?php
/**
 * Unit testing for MallAPIController::getSearchMall() method.
 *
 * @author kadek <kadek@dominopos.com>
 */
use DominoPOS\OrbitAPI\v10\StatusInterface as Status;
use OrbitShop\API\v1\Helper\Generator;
use OrbitShop\API\v1\OrbitShopAPI;

class getSearchMallTest extends OrbitTestCase
{
    /**
     * Executed only once at the beginning of the test.
     */
    public static function setUpBeforeClass()
    {
        parent::createAppStatic();

        // Truncate the data just in case previous test was not clean up
        static::truncateData();

        // Get the prefix of the table name
        $apikey_table = static::$dbPrefix . 'apikeys';
        $user_table = static::$dbPrefix . 'users';
        $user_detail_table = static::$dbPrefix . 'user_details';
        $role_table = static::$dbPrefix . 'roles';
        $permission_table = static::$dbPrefix . 'permissions';
        $permission_role_table = static::$dbPrefix . 'permission_role';
        $custom_permission_table = static::$dbPrefix . 'custom_permission';
        $merchant_table = static::$dbPrefix . 'merchants';
        $retailer_table = static::$dbPrefix . 'merchants';
        $setting_table = static::$dbPrefix . 'settings';

        // Insert dummy data on apikeys
        DB::statement("INSERT INTO `{$apikey_table}`
                (`apikey_id`, `api_key`, `api_secret_key`, `user_id`, `status`, `created_at`, `updated_at`)
                VALUES
                (1, 'abc123', 'abc12345678910', '1', 'deleted', '2014-10-19 20:02:01', '2014-10-19 20:03:01'),
                (2, 'bcd234', 'bcd23456789010', '2', 'active', '2014-10-19 20:02:02', '2014-10-19 20:03:02'),
                (3, 'cde345', 'cde34567890100', '3', 'active', '2014-10-19 20:02:03', '2014-10-19 20:03:03'),
                (4, 'def123', 'def12345678901', '1', 'active', '2014-10-19 20:02:04', '2014-10-19 20:03:04'),
                (5, 'efg212', 'efg09876543212', '4', 'blocked', '2014-10-19 20:02:05', '2014-10-19 20:03:05'),
                (6, 'hij313', 'hijklmn0987623', '4', 'active', '2014-10-19 20:02:06', '2014-10-19 20:03:06'),
                (7, 'klm432', 'klm09876543211', '5', 'active', '2014-10-19 20:02:07', '2014-10-19 20:03:07')"
        );

        $password = array(
            'john'      => Hash::make('john'),
            'smith'     => Hash::make('smith'),
            'chuck'     => Hash::make('chuck'),
            'optimus'   => Hash::make('optimus'),
            'panther'   => Hash::make('panther')
        );

        // Insert dummy data on users
        DB::statement("INSERT INTO `{$user_table}`
                (`user_id`, `username`, `user_password`, `user_email`, `user_firstname`, `user_lastname`, `user_last_login`, `user_ip`, `user_role_id`, `status`, `modified_by`, `created_at`, `updated_at`)
                VALUES
                ('1', 'john', '{$password['john']}', 'john@localhost.org', 'John', 'Doe', '2014-10-20 06:20:01', '10.10.0.11', '1', 'active', '1', '2014-10-20 06:30:01', '2014-10-20 06:31:01'),
                ('2', 'smith', '{$password['smith']}', 'smith@localhost.org', 'John', 'Smith', '2014-10-20 06:20:02', '10.10.0.12', '3', 'active', '1', '2014-10-20 06:30:02', '2014-10-20 06:31:02'),
                ('3', 'chuck', '{$password['chuck']}', 'chuck@localhost.org', 'Chuck', 'Norris', '2014-10-20 06:20:03', '10.10.0.13', '3', 'active', '1', '2014-10-20 06:30:03', '2014-10-20 06:31:03'),
                ('4', 'optimus', '{$password['optimus']}', 'optimus@localhost.org', 'Optimus', 'Prime', '2014-10-20 06:20:04', '10.10.0.13', '3', 'blocked', '1', '2014-10-20 06:30:04', '2014-10-20 06:31:04'),
                ('5', 'panther', '{$password['panther']}', 'panther@localhost.org', 'Pink', 'Panther', '2014-10-20 06:20:05', '10.10.0.13', '3', 'deleted', '1', '2014-10-20 06:30:05', '2014-10-20 06:31:05')"
        );

        // Insert dummy data on roles
        DB::statement("INSERT INTO `{$role_table}`
                (`role_id`, `role_name`, `modified_by`, `created_at`, `updated_at`)
                VALUES
                ('1', 'Super Admin', '1', NOW(), NOW()),
                ('2', 'Mall Owner', '2', NOW(), NOW()),
                ('3', 'Consumer', '3', NOW(), NOW()),
                ('4', 'Merchant Owner', '4', NOW(), NOW()),
                ('5', 'Retailer Owner', '5', NOW(), NOW()),
                ('6', 'Manager', '6', NOW(), NOW()),
                ('7', 'Supervisor', '7', NOW(), NOW()),
                ('8', 'Cashier', '8', NOW(), NOW()),
                ('9', 'Guest', '9', NOW(), NOW()),
                ('10', 'Mall Admin', '10', NOW(), NOW()),
                ('11', 'Mall Customer Service', '11', NOW(), NOW()),
                ('12', 'Tenant Owner', '12', NOW(), NOW()),
                ('13', 'Mall Group Owner', '13', NOW(), NOW())
                "
        );

        // Insert dummy data on permissions
        DB::statement("INSERT INTO `{$permission_table}`
                (`permission_id`, `permission_name`, `permission_label`, `permission_group`, `permission_group_label`, `permission_name_order`, `permission_group_order`, `permission_default_value`, `modified_by`, `created_at`, `updated_at`)
                VALUES
                (1, 'create_role', 'Role', 'role', 'Role', 1, 1, 'no', 0, NOW(), NOW()),
                (2, 'view_role', 'Role', 'role', 'Role', 1, 1, 'no', 0, NOW(), NOW()),
                (3, 'update_role', 'Role', 'role', 'Role', 1, 1, 'no', 0, NOW(), NOW()),
                (4, 'delete_role', 'Role', 'role', 'Role', 1, 1, 'no', 0, NOW(), NOW()),
                (5, 'create_user', 'User', 'user', 'User', 2, 2, 'no', 0, NOW(), NOW()),
                (6, 'view_user', 'User', 'user', 'User', 2, 2, 'no', 0, NOW(), NOW()),
                (7, 'update_user', 'User', 'user', 'User', 2, 2, 'no', 0, NOW(), NOW()),
                (8, 'delete_user', 'User', 'user', 'User', 2, 2, 'no', 0, NOW(), NOW()),
                (9, 'create_mall', 'Mall', 'mall', 'Mall', 3, 3, 'no', 0, NOW(), NOW()),
                (10, 'view_mall', 'Mall', 'mall', 'Mall', 3, 3, 'no', 0, NOW(), NOW()),
                (11, 'update_mall', 'Mall', 'mall', 'Mall', 3, 3, 'no', 0, NOW(), NOW()),
                (12, 'delete_mall', 'Mall', 'mall', 'Mall', 3, 3, 'no', 0, NOW(), NOW()),
                (13, 'create_merchant', 'Merchant', 'merchant', 'Merchant', 4, 4, 'no', 0, NOW(), NOW()),
                (14, 'view_merchant', 'Merchant', 'merchant', 'Merchant', 4, 4, 'no', 0, NOW(), NOW()),
                (15, 'update_merchant', 'Merchant', 'merchant', 'Merchant', 4, 4, 'no', 0, NOW(), NOW()),
                (16, 'delete_merchant', 'Merchant', 'merchant', 'Merchant', 4, 4, 'no', 0, NOW(), NOW()),
                (17, 'create_retailer', 'Retailer', 'retailer', 'Retailer', 5, 5, 'no', 0, NOW(), NOW()),
                (18, 'view_retailer', 'Retailer', 'retailer', 'Retailer', 5, 5, 'no', 0, NOW(), NOW()),
                (19, 'update_retailer', 'Retailer', 'retailer', 'Retailer', 5, 5, 'no', 0, NOW(), NOW()),
                (20, 'delete_retailer', 'Retailer', 'retailer', 'Retailer', 5, 5, 'no', 0, NOW(), NOW()),
                (21, 'create_product', 'Product', 'product', 'Product', 6, 6, 'no', 0, NOW(), NOW()),
                (22, 'view_product', 'Product', 'product', 'Product', 6, 6, 'no', 0, NOW(), NOW()),
                (23, 'update_product', 'Product', 'product', 'Product', 6, 6, 'no', 0, NOW(), NOW()),
                (24, 'delete_product', 'Product', 'product', 'Product', 6, 6, 'no', 0, NOW(), NOW()),
                (25, 'create_category', 'Category', 'category', 'Category', 7, 7, 'no', 0, NOW(), NOW()),
                (26, 'view_category', 'Category', 'category', 'Category', 7, 7, 'no', 0, NOW(), NOW()),
                (27, 'update_category', 'Category', 'category', 'Category', 7, 7, 'no', 0, NOW(), NOW()),
                (28, 'delete_category', 'Category', 'category', 'Category', 7, 7, 'no', 0, NOW(), NOW()),
                (29, 'create_promotion', 'Promotion', 'promotion', 'Promotion', 8, 8, 'no', 0, NOW(), NOW()),
                (30, 'view_promotion', 'Promotion', 'promotion', 'Promotion', 8, 8, 'no', 0, NOW(), NOW()),
                (31, 'update_promotion', 'Promotion', 'promotion', 'Promotion', 8, 8, 'no', 0, NOW(), NOW()),
                (32, 'delete_promotion', 'Promotion', 'promotion', 'Promotion', 8, 8, 'no', 0, NOW(), NOW()),
                (33, 'create_coupon', 'Coupon', 'coupon', 'Coupon', 9, 9, 'no', 0, NOW(), NOW()),
                (34, 'view_coupon', 'Coupon', 'coupon', 'Coupon', 9, 9, 'no', 0, NOW(), NOW()),
                (35, 'update_coupon', 'Coupon', 'coupon', 'Coupon', 9, 9, 'no', 0, NOW(), NOW()),
                (36, 'delete_coupon', 'Coupon', 'coupon', 'Coupon', 9, 9, 'no', 0, NOW(), NOW()),
                (37, 'create_product_attribute', 'Product Attribute', 'product_attribute', 'Product Attribute', 10, 10, 'no', 0, NOW(), NOW()),
                (38, 'view_product_attribute', 'Product Attribute', 'product_attribute', 'Product Attribute', 10, 10, 'no', 0, NOW(), NOW()),
                (39, 'update_product_attribute', 'Product Attribute', 'product_attribute', 'Product Attribute', 10, 10, 'no', 0, NOW(), NOW()),
                (40, 'delete_product_attribute', 'Product Attribute', 'product_attribute', 'Product Attribute', 10, 10, 'no', 0, NOW(), NOW()),
                (41, 'create_employee', 'Employee', 'employee', 'Employee', 11, 11, 'no', 0, NOW(), NOW()),
                (42, 'view_employee', 'Employee', 'employee', 'Employee', 11, 11, 'no', 0, NOW(), NOW()),
                (43, 'update_employee', 'Employee', 'employee', 'Employee', 11, 11, 'no', 0, NOW(), NOW()),
                (44, 'delete_employee', 'Employee', 'employee', 'Employee', 11, 11, 'no', 0, NOW(), NOW()),
                (45, 'create_event', 'Event', 'event', 'Event', 12, 12, 'no', 0, NOW(), NOW()),
                (46, 'view_event', 'Event', 'event', 'Event', 12, 12, 'no', 0, NOW(), NOW()),
                (47, 'update_event', 'Event', 'event', 'Event', 12, 12, 'no', 0, NOW(), NOW()),
                (48, 'delete_event', 'Event', 'event', 'Event', 12, 12, 'no', 0, NOW(), NOW()),
                (49, 'create_personal_interest', 'Personal Interest', 'personal_interest', 'Personal Interest', 13, 13, 'no', 0, NOW(), NOW()),
                (50, 'view_personal_interest', 'Personal Interest', 'personal_interest', 'Personal Interest', 13, 13, 'no', 0, NOW(), NOW()),
                (51, 'update_personal_interest', 'Personal Interest', 'personal_interest', 'Personal Interest', 13, 13, 'no', 0, NOW(), NOW()),
                (52, 'delete_personal_interest', 'Personal Interest', 'personal_interest', 'Personal Interest', 13, 13, 'no', 0, NOW(), NOW()),
                (53, 'create_widget', 'Widget', 'widget', 'Widget', 14, 14, 'no', 0, NOW(), NOW()),
                (54, 'view_widget', 'Widget', 'widget', 'Widget', 14, 14, 'no', 0, NOW(), NOW()),
                (55, 'update_widget', 'Widget', 'widget', 'Widget', 14, 14, 'no', 0, NOW(), NOW()),
                (56, 'delete_widget', 'Widget', 'widget', 'Widget', 14, 14, 'no', 0, NOW(), NOW()),
                (57, 'create_pos_quick_product', 'Pos Quick Product', 'pos_quick_product', 'Pos Quick Product', 15, 15, 'no', 0, NOW(), NOW()),
                (58, 'view_pos_quick_product', 'Pos Quick Product', 'pos_quick_product', 'Pos Quick Product', 15, 15, 'no', 0, NOW(), NOW()),
                (59, 'update_pos_quick_product', 'Pos Quick Product', 'pos_quick_product', 'Pos Quick Product', 15, 15, 'no', 0, NOW(), NOW()),
                (60, 'delete_pos_quick_product', 'Pos Quick Product', 'pos_quick_product', 'Pos Quick Product', 15, 15, 'no', 0, NOW(), NOW()),
                (61, 'create_issued_coupon', 'Issued Coupon', 'issued_coupon', 'Issued Coupon', 16, 16, 'no', 0, NOW(), NOW()),
                (62, 'view_issued_coupon', 'Issued Coupon', 'issued_coupon', 'Issued Coupon', 16, 16, 'no', 0, NOW(), NOW()),
                (63, 'update_issued_coupon', 'Issued Coupon', 'issued_coupon', 'Issued Coupon', 16, 16, 'no', 0, NOW(), NOW()),
                (64, 'delete_issued_coupon', 'Issued Coupon', 'issued_coupon', 'Issued Coupon', 16, 16, 'no', 0, NOW(), NOW()),
                (65, 'view_activity', 'Activity', 'activity', 'Activity', 17, 17, 'no', 0, NOW(), NOW()),
                (66, 'view_transaction_history', 'Transaction History', 'transaction_history', 'Transaction History', 18, 18, 'no', 0, NOW(), NOW()),
                (67, 'change_password', 'Password', 'password', 'Password', 19, 19, 'no', 0, NOW(), NOW()),
                (68, 'view_tax', 'Tax', 'tax', 'Tax', 20, 20, 'no', 0, NOW(), NOW()),
                (69, 'create_setting', 'Setting', 'setting', 'Setting', 21, 21, 'no', 0, NOW(), NOW()),
                (70, 'view_setting', 'Setting', 'setting', 'Setting', 21, 21, 'no', 0, NOW(), NOW()),
                (71, 'update_setting', 'Setting', 'setting', 'Setting', 21, 21, 'no', 0, NOW(), NOW()),
                (72, 'delete_setting', 'Setting', 'setting', 'Setting', 21, 21, 'no', 0, NOW(), NOW()),
                (73, 'create_news', 'News', 'news', 'News', 22, 22, 'no', 0, NOW(), NOW()),
                (74, 'view_news', 'News', 'news', 'News', 22, 22, 'no', 0, NOW(), NOW()),
                (75, 'update_news', 'News', 'news', 'News', 22, 22, 'no', 0, NOW(), NOW()),
                (76, 'delete_news', 'News', 'news', 'News', 22, 22, 'no', 0, NOW(), NOW()),
                (77, 'create_lucky_draw', 'Lucky Draw', 'lucky_draw', 'Lucky Draw', 23, 23, 'no', 0, NOW(), NOW()),
                (78, 'view_lucky_draw', 'Lucky Draw', 'lucky_draw', 'Lucky Draw', 23, 23, 'no', 0, NOW(), NOW()),
                (79, 'update_lucky_draw', 'Lucky Draw', 'lucky_draw', 'Lucky Draw', 23, 23, 'no', 0, NOW(), NOW()),
                (80, 'delete_lucky_draw', 'Lucky Draw', 'lucky_draw', 'Lucky Draw', 23, 23, 'no', 0, NOW(), NOW())"
                );

        // Insert dummy data on permission_role
        DB::statement("INSERT INTO `{$permission_role_table}`
                (`permission_role_id`, `role_id`, `permission_id`, `allowed`, `created_at`, `updated_at`)
                VALUES
                (1, 2, 1, 'no', NOW(), NOW()),
                (2, 2, 2, 'no', NOW(), NOW()),
                (3, 2, 3, 'no', NOW(), NOW()),
                (4, 2, 4, 'no', NOW(), NOW()),
                (5, 2, 5, 'no', NOW(), NOW()),
                (6, 2, 6, 'yes', NOW(), NOW()),
                (7, 2, 7, 'no', NOW(), NOW()),
                (8, 2, 8, 'no', NOW(), NOW()),
                (9, 2, 9, 'yes', NOW(), NOW()),
                (10, 2, 10, 'yes', NOW(), NOW()),
                (11, 2, 11, 'yes', NOW(), NOW()),
                (12, 2, 12, 'no', NOW(), NOW()),
                (13, 2, 13, 'yes', NOW(), NOW()),
                (14, 2, 14, 'yes', NOW(), NOW()),
                (15, 2, 15, 'yes', NOW(), NOW()),
                (16, 2, 16, 'yes', NOW(), NOW()),
                (17, 2, 17, 'yes', NOW(), NOW()),
                (18, 2, 18, 'yes', NOW(), NOW()),
                (19, 2, 19, 'yes', '2015-09-07 23:18:56', '2015-09-07 23:18:56'),
                (20, 2, 20, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (21, 2, 21, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (22, 2, 22, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (23, 2, 23, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (24, 2, 24, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (25, 2, 25, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (26, 2, 26, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (27, 2, 27, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (28, 2, 28, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (29, 2, 29, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (30, 2, 30, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (31, 2, 31, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (32, 2, 32, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (33, 2, 33, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (34, 2, 34, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (35, 2, 35, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (36, 2, 36, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (37, 2, 37, 'yes', '2015-09-07 23:18:57', '2015-09-07 23:18:57'),
                (38, 2, 38, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (39, 2, 39, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (40, 2, 40, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (41, 2, 41, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (42, 2, 42, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (43, 2, 43, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (44, 2, 44, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (45, 2, 45, 'no', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (46, 2, 46, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (47, 2, 47, 'no', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (48, 2, 48, 'no', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (49, 2, 49, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (50, 2, 50, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (51, 2, 51, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (52, 2, 52, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (53, 2, 53, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (54, 2, 54, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (55, 2, 55, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (56, 2, 56, 'yes', '2015-09-07 23:18:58', '2015-09-07 23:18:58'),
                (57, 2, 57, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (58, 2, 58, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (59, 2, 59, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (60, 2, 60, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (61, 2, 61, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (62, 2, 62, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (63, 2, 63, 'no', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (64, 2, 64, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (65, 2, 65, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (66, 2, 66, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (67, 2, 67, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (68, 2, 68, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (69, 2, 69, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (70, 2, 70, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (71, 2, 71, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (72, 2, 72, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (73, 2, 73, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (74, 3, 1, 'no', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (75, 3, 2, 'yes', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (76, 3, 3, 'no', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (77, 3, 4, 'no', '2015-09-07 23:18:59', '2015-09-07 23:18:59'),
                (78, 3, 5, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (79, 3, 6, 'yes', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (80, 3, 7, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (81, 3, 8, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (82, 3, 9, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (83, 3, 10, 'yes', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (84, 3, 11, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (85, 3, 12, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (86, 3, 13, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (87, 3, 14, 'yes', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (88, 3, 15, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (89, 3, 16, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (90, 3, 17, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (91, 3, 18, 'yes', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (92, 3, 19, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (93, 3, 20, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (94, 3, 21, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (95, 3, 22, 'yes', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (96, 3, 23, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (97, 3, 24, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (98, 3, 25, 'no', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (99, 3, 26, 'yes', '2015-09-07 23:19:00', '2015-09-07 23:19:00'),
                (100, 3, 27, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (101, 3, 28, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (102, 3, 29, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (103, 3, 30, 'yes', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (104, 3, 31, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (105, 3, 32, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (106, 3, 33, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (107, 3, 34, 'yes', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (108, 3, 35, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (109, 3, 36, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (110, 3, 37, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (111, 3, 38, 'yes', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (112, 3, 39, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (113, 3, 40, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (114, 3, 41, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (115, 3, 42, 'yes', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (116, 3, 43, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (117, 3, 44, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (118, 3, 45, 'no', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (119, 3, 46, 'yes', '2015-09-07 23:19:01', '2015-09-07 23:19:01'),
                (120, 3, 47, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (121, 3, 48, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (122, 3, 49, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (123, 3, 50, 'yes', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (124, 3, 51, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (125, 3, 52, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (126, 3, 53, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (127, 3, 54, 'yes', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (128, 3, 55, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (129, 3, 56, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (130, 3, 57, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (131, 3, 58, 'yes', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (132, 3, 59, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (133, 3, 60, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (134, 3, 61, 'yes', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (135, 3, 62, 'yes', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (136, 3, 63, 'no', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (137, 3, 64, 'yes', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (138, 3, 65, 'yes', '2015-09-07 23:19:02', '2015-09-07 23:19:02'),
                (139, 3, 66, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (140, 3, 67, 'yes', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (141, 3, 68, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (142, 3, 69, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (143, 3, 70, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (144, 3, 71, 'yes', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (145, 3, 72, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (146, 3, 73, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (147, 4, 1, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (148, 4, 2, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (149, 4, 3, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (150, 4, 4, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (151, 4, 5, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (152, 4, 6, 'yes', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (153, 4, 7, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (154, 4, 8, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (155, 4, 9, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (156, 4, 10, 'yes', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (157, 4, 11, 'yes', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (158, 4, 12, 'no', '2015-09-07 23:19:03', '2015-09-07 23:19:03'),
                (159, 4, 13, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (160, 4, 14, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (161, 4, 15, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (162, 4, 16, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (163, 4, 17, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (164, 4, 18, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (165, 4, 19, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (166, 4, 20, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (167, 4, 21, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (168, 4, 22, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (169, 4, 23, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (170, 4, 24, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (171, 4, 25, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (172, 4, 26, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (173, 4, 27, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (174, 4, 28, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (175, 4, 29, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (176, 4, 30, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (177, 4, 31, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (178, 4, 32, 'yes', '2015-09-07 23:19:04', '2015-09-07 23:19:04'),
                (179, 4, 33, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (180, 4, 34, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (181, 4, 35, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (182, 4, 36, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (183, 4, 37, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (184, 4, 38, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (185, 4, 39, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (186, 4, 40, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (187, 4, 41, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (188, 4, 42, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (189, 4, 43, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (190, 4, 44, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (191, 4, 45, 'no', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (192, 4, 46, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (193, 4, 47, 'no', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (194, 4, 48, 'no', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (195, 4, 49, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (196, 4, 50, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (197, 4, 51, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (198, 4, 52, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (199, 4, 53, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (200, 4, 54, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (201, 4, 55, 'yes', '2015-09-07 23:19:05', '2015-09-07 23:19:05'),
                (202, 4, 56, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (203, 4, 57, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (204, 4, 58, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (205, 4, 59, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (206, 4, 60, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (207, 4, 61, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (208, 4, 62, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (209, 4, 63, 'no', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (210, 4, 64, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (211, 4, 65, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (212, 4, 66, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (213, 4, 67, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (214, 4, 68, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (215, 4, 69, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (216, 4, 70, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (217, 4, 71, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (218, 4, 72, 'yes', '2015-09-07 23:19:06', '2015-09-07 23:19:06'),
                (219, 4, 73, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (220, 5, 1, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (221, 5, 2, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (222, 5, 3, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (223, 5, 4, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (224, 5, 5, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (225, 5, 6, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (226, 5, 7, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (227, 5, 8, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (228, 5, 9, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (229, 5, 10, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (230, 5, 11, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (231, 5, 12, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (232, 5, 13, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (233, 5, 14, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (234, 5, 15, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (235, 5, 16, 'no', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (236, 5, 17, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (237, 5, 18, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (238, 5, 19, 'yes', '2015-09-07 23:19:07', '2015-09-07 23:19:07'),
                (239, 5, 20, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (240, 5, 21, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (241, 5, 22, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (242, 5, 23, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (243, 5, 24, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (244, 5, 25, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (245, 5, 26, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (246, 5, 27, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (247, 5, 28, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (248, 5, 29, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (249, 5, 30, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (250, 5, 31, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (251, 5, 32, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (252, 5, 33, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (253, 5, 34, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (254, 5, 35, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (255, 5, 36, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (256, 5, 37, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (257, 5, 38, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (258, 5, 39, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (259, 5, 40, 'yes', '2015-09-07 23:19:08', '2015-09-07 23:19:08'),
                (260, 5, 41, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (261, 5, 42, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (262, 5, 43, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (263, 5, 44, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (264, 5, 45, 'no', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (265, 5, 46, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (266, 5, 47, 'no', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (267, 5, 48, 'no', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (268, 5, 49, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (269, 5, 50, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (270, 5, 51, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (271, 5, 52, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (272, 5, 53, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (273, 5, 54, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (274, 5, 55, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (275, 5, 56, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (276, 5, 57, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (277, 5, 58, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (278, 5, 59, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (279, 5, 60, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (280, 5, 61, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (281, 5, 62, 'yes', '2015-09-07 23:19:09', '2015-09-07 23:19:09'),
                (282, 5, 63, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (283, 5, 64, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (284, 5, 65, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (285, 5, 66, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (286, 5, 67, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (287, 5, 68, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (288, 5, 69, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (289, 5, 70, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (290, 5, 71, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (291, 5, 72, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (292, 5, 73, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (293, 6, 1, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (294, 6, 2, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (295, 6, 3, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (296, 6, 4, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (297, 6, 5, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (298, 6, 6, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (299, 6, 7, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (300, 6, 8, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (301, 6, 9, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (302, 6, 10, 'yes', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (303, 6, 11, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (304, 6, 12, 'no', '2015-09-07 23:19:10', '2015-09-07 23:19:10'),
                (305, 6, 13, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (306, 6, 14, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (307, 6, 15, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (308, 6, 16, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (309, 6, 17, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (310, 6, 18, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (311, 6, 19, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (312, 6, 20, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (313, 6, 21, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (314, 6, 22, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (315, 6, 23, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (316, 6, 24, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (317, 6, 25, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (318, 6, 26, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (319, 6, 27, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (320, 6, 28, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (321, 6, 29, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (322, 6, 30, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (323, 6, 31, 'yes', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (324, 6, 32, 'no', '2015-09-07 23:19:11', '2015-09-07 23:19:11'),
                (325, 6, 33, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (326, 6, 34, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (327, 6, 35, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (328, 6, 36, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (329, 6, 37, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (330, 6, 38, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (331, 6, 39, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (332, 6, 40, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (333, 6, 41, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (334, 6, 42, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (335, 6, 43, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (336, 6, 44, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (337, 6, 45, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (338, 6, 46, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (339, 6, 47, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (340, 6, 48, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (341, 6, 49, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (342, 6, 50, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (343, 6, 51, 'yes', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (344, 6, 52, 'no', '2015-09-07 23:19:12', '2015-09-07 23:19:12'),
                (345, 6, 53, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (346, 6, 54, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (347, 6, 55, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (348, 6, 56, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (349, 6, 57, 'no', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (350, 6, 58, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (351, 6, 59, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (352, 6, 60, 'no', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (353, 6, 61, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (354, 6, 62, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (355, 6, 63, 'no', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (356, 6, 64, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (357, 6, 65, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (358, 6, 66, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (359, 6, 67, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (360, 6, 68, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (361, 6, 69, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (362, 6, 70, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (363, 6, 71, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (364, 6, 72, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (365, 6, 73, 'yes', '2015-09-07 23:19:13', '2015-09-07 23:19:13'),
                (366, 7, 1, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (367, 7, 2, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (368, 7, 3, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (369, 7, 4, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (370, 7, 5, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (371, 7, 6, 'yes', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (372, 7, 7, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (373, 7, 8, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (374, 7, 9, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (375, 7, 10, 'yes', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (376, 7, 11, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (377, 7, 12, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (378, 7, 13, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (379, 7, 14, 'yes', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (380, 7, 15, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (381, 7, 16, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (382, 7, 17, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (383, 7, 18, 'yes', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (384, 7, 19, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (385, 7, 20, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (386, 7, 21, 'no', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (387, 7, 22, 'yes', '2015-09-07 23:19:14', '2015-09-07 23:19:14'),
                (388, 7, 23, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (389, 7, 24, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (390, 7, 25, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (391, 7, 26, 'yes', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (392, 7, 27, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (393, 7, 28, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (394, 7, 29, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (395, 7, 30, 'yes', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (396, 7, 31, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (397, 7, 32, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (398, 7, 33, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (399, 7, 34, 'yes', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (400, 7, 35, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (401, 7, 36, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (402, 7, 37, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (403, 7, 38, 'yes', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (404, 7, 39, 'yes', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (405, 7, 40, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (406, 7, 41, 'no', '2015-09-07 23:19:15', '2015-09-07 23:19:15'),
                (407, 7, 42, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (408, 7, 43, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (409, 7, 44, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (410, 7, 45, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (411, 7, 46, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (412, 7, 47, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (413, 7, 48, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (414, 7, 49, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (415, 7, 50, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (416, 7, 51, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (417, 7, 52, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (418, 7, 53, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (419, 7, 54, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (420, 7, 55, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (421, 7, 56, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (422, 7, 57, 'no', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (423, 7, 58, 'yes', '2015-09-07 23:19:16', '2015-09-07 23:19:16'),
                (424, 7, 59, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (425, 7, 60, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (426, 7, 61, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (427, 7, 62, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (428, 7, 63, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (429, 7, 64, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (430, 7, 65, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (431, 7, 66, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (432, 7, 67, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (433, 7, 68, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (434, 7, 69, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (435, 7, 70, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (436, 7, 71, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (437, 7, 72, 'yes', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (438, 7, 73, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (439, 8, 1, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (440, 8, 2, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (441, 8, 3, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (442, 8, 4, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (443, 8, 5, 'no', '2015-09-07 23:19:17', '2015-09-07 23:19:17'),
                (444, 8, 6, 'yes', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (445, 8, 7, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (446, 8, 8, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (447, 8, 9, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (448, 8, 10, 'yes', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (449, 8, 11, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (450, 8, 12, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (451, 8, 13, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (452, 8, 14, 'yes', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (453, 8, 15, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (454, 8, 16, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (455, 8, 17, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (456, 8, 18, 'yes', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (457, 8, 19, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (458, 8, 20, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (459, 8, 21, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (460, 8, 22, 'yes', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (461, 8, 23, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (462, 8, 24, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (463, 8, 25, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (464, 8, 26, 'yes', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (465, 8, 27, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (466, 8, 28, 'no', '2015-09-07 23:19:18', '2015-09-07 23:19:18'),
                (467, 8, 29, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (468, 8, 30, 'yes', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (469, 8, 31, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (470, 8, 32, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (471, 8, 33, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (472, 8, 34, 'yes', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (473, 8, 35, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (474, 8, 36, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (475, 8, 37, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (476, 8, 38, 'yes', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (477, 8, 39, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (478, 8, 40, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (479, 8, 41, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (480, 8, 42, 'yes', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (481, 8, 43, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (482, 8, 44, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (483, 8, 45, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (484, 8, 46, 'yes', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (485, 8, 47, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (486, 8, 48, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (487, 8, 49, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (488, 8, 50, 'yes', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (489, 8, 51, 'no', '2015-09-07 23:19:19', '2015-09-07 23:19:19'),
                (490, 8, 52, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (491, 8, 53, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (492, 8, 54, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (493, 8, 55, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (494, 8, 56, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (495, 8, 57, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (496, 8, 58, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (497, 8, 59, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (498, 8, 60, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (499, 8, 61, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (500, 8, 62, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (501, 8, 63, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (502, 8, 64, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (503, 8, 65, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (504, 8, 66, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (505, 8, 67, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (506, 8, 68, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (507, 8, 69, 'no', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (508, 8, 70, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (509, 8, 71, 'yes', '2015-09-07 23:19:20', '2015-09-07 23:19:20'),
                (510, 8, 72, 'yes', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (511, 8, 73, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (512, 9, 1, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (513, 9, 2, 'yes', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (514, 9, 3, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (515, 9, 4, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (516, 9, 5, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (517, 9, 6, 'yes', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (518, 9, 7, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (519, 9, 8, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (520, 9, 9, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (521, 9, 10, 'yes', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (522, 9, 11, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (523, 9, 12, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (524, 9, 13, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (525, 9, 14, 'yes', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (526, 9, 15, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (527, 9, 16, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (528, 9, 17, 'no', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (529, 9, 18, 'yes', '2015-09-07 23:19:21', '2015-09-07 23:19:21'),
                (530, 9, 19, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (531, 9, 20, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (532, 9, 21, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (533, 9, 22, 'yes', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (534, 9, 23, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (535, 9, 24, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (536, 9, 25, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (537, 9, 26, 'yes', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (538, 9, 27, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (539, 9, 28, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (540, 9, 29, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (541, 9, 30, 'yes', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (542, 9, 31, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (543, 9, 32, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (544, 9, 33, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (545, 9, 34, 'yes', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (546, 9, 35, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (547, 9, 36, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (548, 9, 37, 'no', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (549, 9, 38, 'yes', '2015-09-07 23:19:22', '2015-09-07 23:19:22'),
                (550, 9, 39, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (551, 9, 40, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (552, 9, 41, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (553, 9, 42, 'yes', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (554, 9, 43, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (555, 9, 44, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (556, 9, 45, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (557, 9, 46, 'yes', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (558, 9, 47, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (559, 9, 48, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (560, 9, 49, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (561, 9, 50, 'yes', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (562, 9, 51, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (563, 9, 52, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (564, 9, 53, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (565, 9, 54, 'yes', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (566, 9, 55, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (567, 9, 56, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (568, 9, 57, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (569, 9, 58, 'yes', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (570, 9, 59, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (571, 9, 60, 'no', '2015-09-07 23:19:23', '2015-09-07 23:19:23'),
                (572, 9, 61, 'yes', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (573, 9, 62, 'yes', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (574, 9, 63, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (575, 9, 64, 'yes', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (576, 9, 65, 'yes', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (577, 9, 66, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (578, 9, 67, 'yes', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (579, 9, 68, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (580, 9, 69, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (581, 9, 70, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (582, 9, 71, 'yes', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (583, 9, 72, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (584, 9, 73, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (585, 10, 1, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (586, 10, 2, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (587, 10, 3, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (588, 10, 4, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (589, 10, 5, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (590, 10, 6, 'yes', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (591, 10, 7, 'no', '2015-09-07 23:19:24', '2015-09-07 23:19:24'),
                (592, 10, 8, 'no', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (593, 10, 9, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (594, 10, 10, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (595, 10, 11, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (596, 10, 12, 'no', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (597, 10, 13, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (598, 10, 14, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (599, 10, 15, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (600, 10, 16, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (601, 10, 17, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (602, 10, 18, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (603, 10, 19, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (604, 10, 20, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (605, 10, 21, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (606, 10, 22, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (607, 10, 23, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (608, 10, 24, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (609, 10, 25, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (610, 10, 26, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (611, 10, 27, 'yes', '2015-09-07 23:19:25', '2015-09-07 23:19:25'),
                (612, 10, 28, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (613, 10, 29, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (614, 10, 30, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (615, 10, 31, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (616, 10, 32, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (617, 10, 33, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (618, 10, 34, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (619, 10, 35, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (620, 10, 36, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (621, 10, 37, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (622, 10, 38, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (623, 10, 39, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (624, 10, 40, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (625, 10, 41, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (626, 10, 42, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (627, 10, 43, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (628, 10, 44, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (629, 10, 45, 'no', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (630, 10, 46, 'yes', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (631, 10, 47, 'no', '2015-09-07 23:19:26', '2015-09-07 23:19:26'),
                (632, 10, 48, 'no', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (633, 10, 49, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (634, 10, 50, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (635, 10, 51, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (636, 10, 52, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (637, 10, 53, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (638, 10, 54, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (639, 10, 55, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (640, 10, 56, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (641, 10, 57, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (642, 10, 58, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (643, 10, 59, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (644, 10, 60, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (645, 10, 61, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (646, 10, 62, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (647, 10, 63, 'no', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (648, 10, 64, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (649, 10, 65, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (650, 10, 66, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (651, 10, 67, 'yes', '2015-09-07 23:19:27', '2015-09-07 23:19:27'),
                (652, 10, 68, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (653, 10, 69, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (654, 10, 70, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (655, 10, 71, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (656, 10, 72, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (657, 10, 73, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (658, 11, 1, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (659, 11, 2, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (660, 11, 3, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (661, 11, 4, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (662, 11, 5, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (663, 11, 6, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (664, 11, 7, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (665, 11, 8, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (666, 11, 9, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (667, 11, 10, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (668, 11, 11, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (669, 11, 12, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (670, 11, 13, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (671, 11, 14, 'yes', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (672, 11, 15, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (673, 11, 16, 'no', '2015-09-07 23:19:28', '2015-09-07 23:19:28'),
                (674, 11, 17, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (675, 11, 18, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (676, 11, 19, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (677, 11, 20, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (678, 11, 21, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (679, 11, 22, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (680, 11, 23, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (681, 11, 24, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (682, 11, 25, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (683, 11, 26, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (684, 11, 27, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (685, 11, 28, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (686, 11, 29, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (687, 11, 30, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (688, 11, 31, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (689, 11, 32, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (690, 11, 33, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (691, 11, 34, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (692, 11, 35, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (693, 11, 36, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (694, 11, 37, 'no', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (695, 11, 38, 'yes', '2015-09-07 23:19:29', '2015-09-07 23:19:29'),
                (696, 11, 39, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (697, 11, 40, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (698, 11, 41, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (699, 11, 42, 'yes', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (700, 11, 43, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (701, 11, 44, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (702, 11, 45, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (703, 11, 46, 'yes', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (704, 11, 47, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (705, 11, 48, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (706, 11, 49, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (707, 11, 50, 'yes', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (708, 11, 51, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (709, 11, 52, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (710, 11, 53, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (711, 11, 54, 'yes', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (712, 11, 55, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (713, 11, 56, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (714, 11, 57, 'no', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (715, 11, 58, 'yes', '2015-09-07 23:19:30', '2015-09-07 23:19:30'),
                (716, 11, 59, 'no', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (717, 11, 60, 'no', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (718, 11, 61, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (719, 11, 62, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (720, 11, 63, 'no', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (721, 11, 64, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (722, 11, 65, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (723, 11, 66, 'no', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (724, 11, 67, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (725, 11, 68, 'no', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (726, 11, 69, 'no', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (727, 11, 70, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (728, 11, 71, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (729, 11, 72, 'yes', '2015-09-07 23:19:31', '2015-09-07 23:19:31'),
                (730, 11, 73, 'no', '2015-09-07 23:19:31', '2015-09-07 23:19:31')"
        );

        // Insert dummy mall
        DB::statement("INSERT INTO `{$merchant_table}`
                (`merchant_id`, `omid`, `orid`, `user_id`, `email`, `name`, `description`, `address_line1`, `address_line2`, `address_line3`, `postal_code`, `city_id`, `city`, `country_id`, `country`, `phone`, `fax`, `start_date_activity`, `end_date_activity`, `status`, `logo`, `currency`, `currency_symbol`, `tax_code1`, `tax_code2`, `tax_code3`, `slogan`, `vat_included`, `contact_person_firstname`, `contact_person_lastname`, `contact_person_position`, `contact_person_phone`, `contact_person_phone2`, `contact_person_email`, `sector_of_activity`, `object_type`, `parent_id`, `is_mall`, `url`, `masterbox_number`, `slavebox_number`, `mobile_default_language`, `pos_language`, `ticket_header`, `ticket_footer`, `floor`, `unit`, `external_object_id`, `modified_by`, `created_at`, `updated_at`)
                VALUES
                (1, 'TAKASHIMAYA', '', 2, 'takashimaya@myorbit.com', 'Takashimaya', 'Takashimaya Shopping Center', NULL, NULL, NULL, 60123, 0, 'Jakarta', 101, 'Indonesia', '62|#|21|#|987654321', NULL, '2015-09-08 00:00:00', NULL, 'active', NULL, 'USD', '$', NULL, NULL, NULL, NULL, 'no', 'John', 'Doe', 'Marketing', '62|#||#|812345678', NULL, 'john-doe@myorbit.com', 'Retail', 'mall', NULL, 'yes', 'www.takashimaya.com.sg', '1', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, '2015-09-07 23:19:52', '2015-09-07 23:19:52'),
                (2, 'TAKASHIMAYA-SC', '', 3, 'takashimayasc@myorbit.com', 'Takashimaya Shopping Center', 'Takashimaya Shopping Center', NULL, NULL, NULL, 60123, 0, 'Jakarta', 101, 'Indonesia', '62|#|21|#|987654321', NULL, '2015-09-08 00:00:00', NULL, 'active', NULL, 'USD', '$', NULL, NULL, NULL, NULL, 'no', 'John', 'Smith', 'Marketing', '62|#||#|812345679', NULL, 'john-smith@myorbit.com', 'Retail', 'mall', NULL, 'yes', 'www.takashimaya.com.sg', '2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, '2015-09-07 23:19:52', '2015-09-07 23:19:52')"
        );

        // Insert dummy tenant
        DB::statement("INSERT INTO `{$retailer_table}`
                (`merchant_id`, `omid`, `orid`, `user_id`, `email`, `name`, `description`, `address_line1`, `address_line2`, `address_line3`, `postal_code`, `city_id`, `city`, `country_id`, `country`, `phone`, `fax`, `start_date_activity`, `end_date_activity`, `status`, `logo`, `currency`, `currency_symbol`, `tax_code1`, `tax_code2`, `tax_code3`, `slogan`, `vat_included`, `contact_person_firstname`, `contact_person_lastname`, `contact_person_position`, `contact_person_phone`, `contact_person_phone2`, `contact_person_email`, `sector_of_activity`, `object_type`, `parent_id`, `is_mall`, `url`, `masterbox_number`, `slavebox_number`, `mobile_default_language`, `pos_language`, `ticket_header`, `ticket_footer`, `floor`, `unit`, `external_object_id`, `modified_by`, `created_at`, `updated_at`)
                    VALUES
                (3, '', '', 1, 'john@localhost.org', 'ARMANI EXCHANGE', 'The modern wardrobe as only Giorgio Armani could envision it, Armani Exchange embodies the youthful spirit of a new generation. \r\n\r\nArmani Exchange takes a playful, urban approach to apparel and accessories, reaching a global audience through over 200 stores worldwide.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '68352855', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/maps/3-armani-exchange-1433763154_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 1, 'no', 'armaniexchange.com/singapore', '3', NULL, NULL, NULL, NULL, NULL, 'LG', '3', NULL, 3, '2015-04-10 12:21:25', '2015-06-08 03:32:34'),
                (4, '', '', 2, 'smith@localhost.org', 'BEAUTY SPA MIS PARIS & DANDY HOUSE', 'The concept of our salon is“Respect for Japanese Style”The typical Japanese wooden interior welcomes you in a warm atmosphere, the tiles on our floors and walls remind of Japanese ceramics, creating the grace of the traditional beauty of Japan. If you take one step into our salon, for a little while, you will be able to indulge in luxury that will make you feel like a real VIP in a traditional Japanese surrounding, all the while being in a different country.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '62351159', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/maps/4-beauty-spa-mis-paris-dandy-house-1433763172_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 1, 'no', 'miss-paris.com.sg/', '4', NULL, NULL, NULL, NULL, NULL, 'L5', '25', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 03:32:52'),
                (5, '', '', 3, 'chuck@localhost.org', 'BEST DENKI', 'stores in Japan. We are constantly developing new retail concepts including multimedia oriented era outlets, information based exchanges and housing related specialty shops.\r\nTo date, Best Denki has more than 500 retail stores worldwide with 466 in Japan, 11 in singapore, 10 in Malaysia, 6 in Indonesia', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '68352855', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/maps/5-best-denki-1433763119_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 1, 'no', 'go.bestdenki.com.sg', '5', NULL, NULL, NULL, NULL, NULL, 'L5', '1', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 03:31:59'),
                (6, '', '', 4, 'optimus@localhost.org', 'BRICKS WORLD', 'Bricks World main shop is located at Ngee Ann City, Level 5 and the shop is the first and largest LEGO Exclusive shop in Singapore. Our Ngee Ann City store was officially opened on 13 December 2003 and was the first monobrand LEGO store in Singapore.\r\nWe carry more than 90 per cent of the LEGO merchandise available in Singapore and thus able to provide superior service and support for our customers.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '67345512', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/pictures/6-bricks-world-1433763557_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 1, 'no', 'bricksworld.com/', '6', NULL, NULL, NULL, NULL, NULL, 'L5', '15', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 03:39:17'),
                (7, '', '', 5, 'panther@localhost.org', 'CHARLES & KEITH', 'CHARLES & KEITH SUMMER 2015 lends an element of finesse accompanied by contemporary appeal that binds the lithe movements and vivacity of youth to life.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '67370152', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/pictures/7-charles-keith-1433763771_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 2, 'no', 'www.charleskeith.com/', '7', NULL, NULL, NULL, NULL, NULL, 'LG', '12', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 03:42:51'),
                (8, '', '', 0, '', 'CHOPARD BOUTIQUE', 'It all began in 1860 in the small village of Sonvilier, Switzerland. Here Louis-Ulysse Chopard, a talented young craftsman, established his workshop. By virtue of their precision and reliability, his watches quickly gained a solid reputation among enthusiasts and found buyers as far afield as Eastern Europe, Russia and Scandinavia.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '67338111', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/pictures/8-chopard-boutique-1433763967_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 2, 'no', 'www.chopard.com/‎', '8', NULL, NULL, NULL, NULL, NULL, 'L1', '3', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 03:46:07'),
                (9, '', '', 0, '', 'LA CURE GOURMANDE', 'Created in 1989, La Cure Gourmande is far more than chocolates, confectionery and biscuits. It''s an emotional experience from the moment you walk into the store. Everything about La Cure Gourmande will make you feel like you just stepped back into childhood.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '66842983', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/pictures/9-la-cure-gourmande-1433764758_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 2, 'no', 'www.curegourmande.com/index.cfm', '9', NULL, NULL, NULL, NULL, NULL, 'L3', '9', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 03:59:18'),
                (10, '', '', 0, '', 'LADUREE BOUTIQUE', 'Parisian tea rooms', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '68847361', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/pictures/10-laduree-boutique-1433764911_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 2, 'no', 'www.laduree.com', '10', NULL, NULL, NULL, NULL, NULL, 'L2', '9', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 04:01:52'),
                (11, '', '', 0, '', 'L''OCCITANE', 'With nothing but an alambic, a small truck and a solid knowledge of plants, Olivier Baussan, at the age of 23, distills Rosemary essential oil which he sells on the local markets of Provence. The L’OCCITANE journey begins.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '67377800', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/pictures/11-loccitane-1433764346_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 2, 'no', 'www.shihlinsnacks.com.tw/id', '11', NULL, NULL, NULL, NULL, NULL, 'LG', '33', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 03:52:26'),
                (12, '', '', 0, '', 'SEPHORA', 'Sephora is a visionary beauty-retail concept founded in France by Dominique Mandonnaud in 1970. Sephora''s unique, open-sell environment features an ever-increasing amount of classic and emerging brands across a broad range of product categories including skincare, color, fragrance, body, smilecare, and haircare, in addition to Sephora''s own private label. \r\n\r\nToday, Sephora is not only the leading chain of perfume and cosmetics stores in France, but also a powerful beauty presence in countries around the world. \r\n\r\nTo build the most knowledgeable and professional team of product consultants in the beauty industry, Sephora developed Science of Sephora. This program ensures that our team is skilled to identify skin types, have knowledge of skin physiology, the history of makeup, application techniques, the science of creating fragrances, and most importantly, how to interact with Sephora''s diverse clientele. \r\n\r\nOwned by LVMH Moët Hennessy Louis Vuitton, the world''s leading luxury goods group, Sephora is highly regarded as a beauty trailblazer, thanks to its unparalleled assortment of prestige products, unbiased service from experts, interactive shopping environment, and innovation.', 'null', 'null', NULL, 0, NULL, 'null', 0, '', '68365622', NULL, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 'active', 'uploads/retailers/pictures/12-sephora-1433765032_1.jpg', 'IDR', 'Rp', NULL, NULL, NULL, NULL, 'yes', 'null', 'null', 'null', NULL, NULL, 'null', NULL, 'tenant', 2, 'no', 'sephora.com/', '12', NULL, NULL, NULL, NULL, NULL, 'L1', '6', NULL, 3, '2015-04-10 12:21:26', '2015-06-08 04:03:52')"
        );


        // Insert dummy setting
        DB::statement("INSERT INTO `{$setting_table}`
                (`setting_id`, `setting_name`, `setting_value`, `object_id`, `object_type`, `modified_by`, `status`, `created_at`, `updated_at`)
                VALUES
                (1, 'current_retailer', '2', 0, NULL, NULL, 'active', '2015-09-07 23:20:02', '2015-09-07 23:20:02'),
                (2, 'landing_page', 'news', 2, 'merchant', NULL, 'active', '2015-09-07 23:20:17', '2015-09-07 23:20:17'),
                (3, 'master_password', '$2y$10$71MOuLO/gvCP88litCeU0.UDgQ7unlN4hk014ByzCgEfw50XGsZJK', 2, 'merchant', NULL, 'active', '2015-09-07 23:20:17', '2015-09-07 23:20:17'),
                (4, 'agreement', 'yes', 2, 'merchant', NULL, 'active', '2015-09-07 23:21:05', '2015-09-07 23:21:05')"
        );
    }

    /**
     * Clear all data that has been inserted.
     */
    public static function truncateData()
    {
        $apikey_table = static::$dbPrefix . 'apikeys';
        $user_table = static::$dbPrefix . 'users';
        $user_detail_table = static::$dbPrefix . 'user_details';
        $role_table = static::$dbPrefix . 'roles';
        $permission_table = static::$dbPrefix . 'permissions';
        $permission_role_table = static::$dbPrefix . 'permission_role';
        $custom_permission_table = static::$dbPrefix . 'custom_permission';
        $merchant_table = static::$dbPrefix . 'merchants';
        $setting_table = static::$dbPrefix . 'settings';
        DB::unprepared("TRUNCATE `{$apikey_table}`;
                        TRUNCATE `{$user_table}`;
                        TRUNCATE `{$user_detail_table}`;
                        TRUNCATE `{$role_table}`;
                        TRUNCATE `{$custom_permission_table}`;
                        TRUNCATE `{$permission_role_table}`;
                        TRUNCATE `{$permission_table}`;
                        TRUNCATE `{$setting_table}`;
                        TRUNCATE `{$merchant_table}`");
    }

    public function tearDown()
    {
        unset($_GET);
        unset($_POST);
        $_GET = array();
        $_POST = array();

        unset($_SERVER['HTTP_X_ORBIT_SIGNATURE'],
              $_SERVER['REQUEST_METHOD'],
              $_SERVER['REQUEST_URI'],
              $_SERVER['REMOTE_ADDR']);

        // Make sure we always get a fresh instance of user
        $apikeys = array(
            'abc123',
            'bcd234',
            'cde345',
            'def123',
            'efg212',
            'hij313',
            'klm432',
        );

        foreach ($apikeys as $key) {
            OrbitShopAPI::clearLookupCache($key);
        }

        // Clear every event dispatcher so we get no queue event on each
        // test
        $events = array(
            'orbit.mall.postnewmall.before.auth',
            'orbit.mall.postnewmall.after.auth',
            'orbit.mall.postnewmall.before.authz',
            'orbit.mall.postnewmall.authz.notallowed',
            'orbit.mall.postnewmall.after.authz',
            'orbit.mall.postnewmall.before.validation',
            'orbit.mall.postnewmall.after.validation',
            'orbit.mall.postnewmall.before.save',
            'orbit.mall.postnewmall.after.save',
            'orbit.mall.postnewmall.after.commit',
            'orbit.mall.postnewmall.access.forbidden',
            'orbit.mall.postnewmall.invalid.arguments',
            'orbit.mall.postnewmall.general.exception',
            'orbit.mall.postnewmall.before.render'
        );
        foreach ($events as $event) {
            Event::forget($event);
        }
    }

    public function testObjectInstance()
    {
        $ctl = new MallAPIController();
        $this->assertInstanceOf('MallAPIController', $ctl);
    }

    public function testNoAuthData_GET_api_v1_mall_search()
    {
        $url = '/api/v1/mall/search';

        $data = new stdclass();
        $data->code = Status::CLIENT_ID_NOT_FOUND;
        $data->status = 'error';
        $data->message = Status::CLIENT_ID_NOT_FOUND_MSG;
        $data->data = NULL;

        $expect = json_encode($data);
        $return = $this->call('GET', $url)->getContent();
        $this->assertSame($expect, $return);
    }

    public function testInvalidSignature_GET_api_v1_mall_search()
    {
        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = 'dummy-signature';

        $data = new stdclass();
        $data->code = Status::INVALID_SIGNATURE;
        $data->status = 'error';
        $data->message = Status::INVALID_SIGNATURE_MSG;
        $data->data = null;

        $expect = json_encode($data);
        $return = $this->call('GET', $url)->getContent();
        $this->assertSame($expect, $return);
    }

    public function testSignatureExpire_GET_api_v1_mall_search()
    {
        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time() - 3600;  // an hour ago

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $data = new stdclass();
        $data->code = Status::REQUEST_EXPIRED;
        $data->status = 'error';
        $data->message = Status::REQUEST_EXPIRED_MSG;
        $data->data = null;

        $expect = json_encode($data);
        $return = $this->call('GET', $url)->getContent();
        $this->assertSame($expect, $return);
    }

    // public function testAccessForbidden_GET_api_v1_mall_search()
    // {
    //     // Set the client API Keys
    //     $_GET['apikey'] = 'cde345';
    //     $_GET['apitimestamp'] = time();

    //     $url = '/api/v1/mall/search?' . http_build_query($_GET);

    //     $secretKey = 'cde34567890100';
    //     $_SERVER['REQUEST_METHOD'] = 'GET';
    //     $_SERVER['REQUEST_URI'] = $url;
    //     $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

    //     // Error message when access is forbidden
    //     $viewMerchantLang = Lang::get('validation.orbit.actionlist.view_mall');
    //     $message = Lang::get('validation.orbit.access.forbidden',
    //                          array('action' => $viewMerchantLang));

    //     $data = new stdclass();
    //     $data->code = Status::ACCESS_DENIED;
    //     $data->status = 'error';
    //     $data->message = $message;
    //     $data->data = null;

    //     $expect = json_encode($data);
    //     $return = $this->call('GET', $url)->getContent();
    //     $this->assertSame($expect, $return);

    //     // // Add new permission name 'view_merchant'
    //     // $chuck = User::find(3);
    //     // $permission = new Permission();
    //     // $permission->permission_name = 'view_retailer';
    //     // $permission->save();

    //     // $chuck->permissions()->attach($permission->permission_id, array('allowed' => 'yes'));
    // }

    public function testOK_NoArgumentGiven_GET_api_v1_mall_search()
    {
        // Data
        // No argument given at all, show all merchants
        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 2;
        Config::set('orbit.pagination.max_record', $max_record);
        Config::set('orbit.pagination.per_page', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();
        $_GET['sortby'] = 'registered_date';
        $_GET['sortmode'] = 'desc';

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total records should be 6 and returned records 2
        $this->assertSame(2, (int)$response->data->total_records); //exclude deleted merchants.
        $this->assertSame(2, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(2, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'               => '1',
                'user_id'                   => '2',
                'email'                     => 'takashimaya@myorbit.com',
                'name'                      => 'Takashimaya',
                'description'               => 'Takashimaya Shopping Center',
                'address_line1'             => NULL,
                'address_line2'             => NULL,
                'address_line3'             => NULL,
                'postal_code'               => '60123',
                'city_id'                   => '0',
                'city'                      => 'Jakarta',
                'country_id'                => '101',
                'country'                   => 'Indonesia',
                'phone'                     => '62|#|21|#|987654321',
                'fax'                       => NULL,
                'start_date_activity'       => '2015-09-08 00:00:00',
                'status'                    => 'active',
                'logo'                      => '/mobile-ci/images/default-logo.png',
                'currency'                  => 'USD',
                'currency_symbol'           => '$',
                'tax_code1'                 => NULL,
                'tax_code2'                 => NULL,
                'tax_code3'                 => NULL,
                'slogan'                    => NULL,
                'vat_included'              => 'no',
                'contact_person_firstname'  => 'John',
                'contact_person_position'   => 'Marketing',
                'contact_person_phone'      => '62|#||#|812345678',
                'sector_of_activity'        => 'Retail',
                'object_type'               => 'mall',
                'parent_id'                 => NULL,
                'modified_by'               => '0',
                'created_at'                => '2015-09-07 23:19:52'
            ),
            array(
                'merchant_id'               => '2',
                'user_id'                   => '3',
                'email'                     => 'takashimayasc@myorbit.com',
                'name'                      => 'Takashimaya Shopping Center',
                'description'               => 'Takashimaya Shopping Center',
                'address_line1'             => NULL,
                'address_line2'             => NULL,
                'address_line3'             => NULL,
                'postal_code'               => '60123',
                'city_id'                   => '0',
                'city'                      => 'Jakarta',
                'country_id'                => '101',
                'country'                   => 'Indonesia',
                'phone'                     => '62|#|21|#|987654321',
                'fax'                       => NULL,
                'start_date_activity'       => '2015-09-08 00:00:00',
                'status'                    => 'active',
                'logo'                      => '/mobile-ci/images/default-logo.png',
                'currency'                  => 'USD',
                'currency_symbol'           => '$',
                'tax_code1'                 => NULL,
                'tax_code2'                 => NULL,
                'tax_code3'                 => NULL,
                'slogan'                    => NULL,
                'vat_included'              => 'no',
                'contact_person_firstname'  => 'John',
                'contact_person_position'   => 'Marketing',
                'contact_person_phone'      => '62|#||#|812345679',
                'sector_of_activity'        => 'Retail',
                'object_type'               => 'mall',
                'parent_id'                 => NULL,
                'modified_by'               => '0',
                'created_at'                => '2015-09-07 23:19:52'
            )
        );

        // It is ordered by registered date by default so 1) Mata Bulan 2) Mek Di
        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['description'], (string)$return->description);
            $this->assertSame((string)$expect[$index]['address_line1'], (string)$return->address_line1);
            $this->assertSame((string)$expect[$index]['address_line2'], (string)$return->address_line2);
            $this->assertSame((string)$expect[$index]['address_line3'], (string)$return->address_line3);
            $this->assertSame((string)$expect[$index]['postal_code'], (string)$return->postal_code);
            $this->assertSame((string)$expect[$index]['city_id'], (string)$return->city_id);
            $this->assertSame((string)$expect[$index]['city'], (string)$return->city);
            $this->assertSame((string)$expect[$index]['country_id'], (string)$return->country_id);
            $this->assertSame((string)$expect[$index]['country'], (string)$return->country);
            $this->assertSame((string)$expect[$index]['phone'], (string)$return->phone);
            $this->assertSame((string)$expect[$index]['fax'], (string)$return->fax);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['status'], (string)$return->status);
            $this->assertSame((string)$expect[$index]['logo'], (string)$return->logo);
            $this->assertSame((string)$expect[$index]['currency'], (string)$return->currency);
            $this->assertSame((string)$expect[$index]['currency_symbol'], (string)$return->currency_symbol);
            $this->assertSame((string)$expect[$index]['tax_code1'], (string)$return->tax_code1);
            $this->assertSame((string)$expect[$index]['tax_code2'], (string)$return->tax_code2);
            $this->assertSame((string)$expect[$index]['tax_code3'], (string)$return->tax_code3);
            $this->assertSame((string)$expect[$index]['slogan'], (string)$return->slogan);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['contact_person_firstname'], (string)$return->contact_person_firstname);
            $this->assertSame((string)$expect[$index]['contact_person_position'], (string)$return->contact_person_position);
            $this->assertSame((string)$expect[$index]['contact_person_phone'], (string)$return->contact_person_phone);
            $this->assertSame((string)$expect[$index]['contact_person_position'], (string)$return->contact_person_position);
            $this->assertSame((string)$expect[$index]['sector_of_activity'], (string)$return->sector_of_activity);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
            $this->assertSame((string)$expect[$index]['modified_by'], (string)$return->modified_by);
            $this->assertSame((string)$expect[$index]['created_at'], (string)$return->created_at);
        }
    }

    public function testOK_NoArgumentGiven_MaxRecordMoreThenRecords_GET_api_v1_merchant_search()
    {
        // Data
        // No argument given at all, show all users
        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 10;
        Config::set('orbit.pagination.max_record', $max_record);
        Config::set('orbit.pagination.per_page', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();
        $_GET['sortby'] = 'registered_date';
        $_GET['sortmode'] = 'desc';

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total and returned records should be 6, exclude deleted merchants.
        $this->assertSame(2, (int)$response->data->total_records);
        $this->assertSame(2, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(2, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'         => '1',
                'user_id'             => '2',
                'email'               => 'takashimaya@myorbit.com',
                'name'                => 'Takashimaya',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            ),
            array(
                'merchant_id'         => '2',
                'user_id'             => '3',
                'email'               => 'takashimayasc@myorbit.com',
                'name'                => 'Takashimaya Shopping Center',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            )
        );

        // It is ordered by registered date by default so
        // 7-Mata Bulan, 5-Mek Di, 4-Ke Ef Ce, 3-Mitra 9, 2-Indo Mer, 1-Alfa Mer
        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
        }
    }

    public function testInvalidSortBy_GET_api_v1_merchant_search()
    {
        // Data
        $_GET['sortby'] = 'dummy';

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 10;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $message = Lang::get('validation.orbit.empty.merchant_sortby');
        $this->assertSame(Status::INVALID_ARGUMENT, (int)$response->code);
        $this->assertSame('error', (string)$response->status);
        $this->assertSame($message, (string)$response->message);
        $this->assertSame(0, (int)$response->data->total_records);
        $this->assertSame(0, (int)$response->data->returned_records);
        $this->assertTrue(is_null($response->data->records));
    }

    public function testOK_OrderByRegisteredDateDESC_GET_api_v1_merchant_search()
    {
        // Data
        $_GET['sortby'] = 'registered_date';
        $_GET['sortmode'] = 'desc';

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 2;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total records and returned should be 6, exclude deleted merchants.
        $this->assertSame($max_record, (int)$response->data->total_records);
        $this->assertSame(2, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(2, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'         => '1',
                'user_id'             => '2',
                'email'               => 'takashimaya@myorbit.com',
                'name'                => 'Takashimaya',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            ),
            array(
                'merchant_id'         => '2',
                'user_id'             => '3',
                'email'               => 'takashimayasc@myorbit.com',
                'name'                => 'Takashimaya Shopping Center',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            )
        );

        // It is ordered by registered date by default so
        // 7-Mata Bulan, 5-Mek Di, 4-Ke Ef Ce, 3-Mitra 9, 2-Indo Mer, 1-Alfa Mer
        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
        }
    }

    public function testOK_OrderByRegisteredDateASC_GET_api_v1_merchant_search()
    {
        // Data
        $_GET['sortby'] = 'registered_date';
        $_GET['sortmode'] = 'asc';

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 2;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total records and returned should be 6, exclude deleted merchants.
        $this->assertSame($max_record, (int)$response->data->total_records);
        $this->assertSame(2, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(2, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'         => '1',
                'user_id'             => '2',
                'email'               => 'takashimaya@myorbit.com',
                'name'                => 'Takashimaya',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            ),
            array(
                'merchant_id'         => '2',
                'user_id'             => '3',
                'email'               => 'takashimayasc@myorbit.com',
                'name'                => 'Takashimaya Shopping Center',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            )
        );

        // It is ordered by registered date ASC, so
        // 1-Alfa Mer, 2-Indo Mer, 3-Mitra 9, 4-Ke Ef Ce, 5-Mek Di, 7-Mata Bulan
        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
        }
    }

    public function testOK_SearchName_GET_api_v1_merchant_search()
    {
        // Data
        // Should be ordered by registered date desc if not specified
        $_GET['name'] = array('Takashimaya', 'Maya');
        $_GET['sortby'] = 'merchant_name';

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 2;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();
        $_GET['sortby'] = 'registered_date';
        $_GET['sortmode'] = 'desc';

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total records should be 2 and returned records 2
        $this->assertSame(1, (int)$response->data->total_records);
        $this->assertSame(1, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(1, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'         => '1',
                'user_id'             => '2',
                'email'               => 'takashimaya@myorbit.com',
                'name'                => 'Takashimaya',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            )
        );

        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
        }
    }

    public function testOK_SearchName_OrderByNameASC_GET_api_v1_merchant_search()
    {
        // set merchant name, sortby, and sort mode.
        $_GET['name'] = array('Takashimaya', 'Maya');
        $_GET['sortby'] = 'merchant_name';
        $_GET['sortmode'] = 'asc';

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 10;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total records should be 2 and returned records 2
        $this->assertSame(1, (int)$response->data->total_records);
        $this->assertSame(1, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(1, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'         => '1',
                'user_id'             => '2',
                'email'               => 'takashimaya@myorbit.com',
                'name'                => 'Takashimaya',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            ),
            array(
                'merchant_id'         => '2',
                'user_id'             => '3',
                'email'               => 'takashimayasc@myorbit.com',
                'name'                => 'Takashimaya Shopping Center',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            )
        );

        // checking data.
        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
        }
    }

    public function testOK_SearchById_WithRetailersRelationship_OrderByOmidASC_GET_api_v1_merchant_search()
    {
        // set merchant name, sortby, and sort mode.
        $_GET['merchant_id'] = array(1, 2);
        $_GET['with'] = array('tenants');
        $_GET['with_count'] = array('tenants');
        $_GET['sortby'] = 'merchant_omid';
        $_GET['sortmode'] = 'asc';

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 10;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total records should be 2 and returned records 2
        $this->assertSame(2, (int)$response->data->total_records);
        $this->assertSame(2, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(2, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'         => '1',
                'user_id'             => '2',
                'email'               => 'takashimaya@myorbit.com',
                'name'                => 'Takashimaya',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            ),
            array(
                'merchant_id'         => '2',
                'user_id'             => '3',
                'email'               => 'takashimayasc@myorbit.com',
                'name'                => 'Takashimaya Shopping Center',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            )
        );

        // checking data.
        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
        }
    }

    public function testOK_SearchNameLike_OrderByNameASC_GET_api_v1_merchant_search()
    {
        // Data
        $_GET['name_like'] = 'Maya'; // from merchant name 'Mitra 9'.
        $_GET['sortby'] = 'merchant_name';
        $_GET['sortmode'] = 'asc';

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 10;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);

        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame(Status::OK_MSG, (string)$response->message);

        // Number of total records should be 1 and returned records 1
        $this->assertSame(2, (int)$response->data->total_records);
        $this->assertSame(2, (int)$response->data->returned_records);

        // The records attribute should be array
        $this->assertTrue(is_array($response->data->records));
        $this->assertSame(2, count($response->data->records));

        $expect = array(
            array(
                'merchant_id'         => '1',
                'user_id'             => '2',
                'email'               => 'takashimaya@myorbit.com',
                'name'                => 'Takashimaya',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            ),
            array(
                'merchant_id'         => '2',
                'user_id'             => '3',
                'email'               => 'takashimayasc@myorbit.com',
                'name'                => 'Takashimaya Shopping Center',
                'start_date_activity' => '2015-09-08 00:00:00',
                'vat_included'        => 'no',
                'object_type'         => 'mall',
                'parent_id'           => NULL
            )
        );

        // checking data.
        foreach ($response->data->records as $index=>$return)
        {
            $this->assertSame((string)$expect[$index]['merchant_id'], (string)$return->merchant_id);
            $this->assertSame((string)$expect[$index]['user_id'], (string)$return->user_id);
            $this->assertSame((string)$expect[$index]['email'], (string)$return->email);
            $this->assertSame((string)$expect[$index]['name'], (string)$return->name);
            $this->assertSame((string)$expect[$index]['start_date_activity'], (string)$return->start_date_activity);
            $this->assertSame((string)$expect[$index]['vat_included'], (string)$return->vat_included);
            $this->assertSame((string)$expect[$index]['object_type'], (string)$return->object_type);
            $this->assertSame((string)$expect[$index]['parent_id'], (string)$return->parent_id);
        }
    }

    public function testOK_SearchName_NotFound_GET_api_v1_merchant_search()
    {
        // Data
        $_GET['name'] = array('not-exists');

        // It should read from config named 'orbit.pagination.max_record'
        // It should fallback to whathever you like when the config is not exists
        $max_record = 10;
        Config::set('orbit.pagination.max_record', $max_record);

        // Set the client API Keys
        $_GET['apikey'] = 'def123';
        $_GET['apitimestamp'] = time();

        $url = '/api/v1/mall/search?' . http_build_query($_GET);

        $secretKey = 'def12345678901';
        $_SERVER['REQUEST_METHOD'] = 'GET';
        $_SERVER['REQUEST_URI'] = $url;
        $_SERVER['HTTP_X_ORBIT_SIGNATURE'] = Generator::genSignature($secretKey, 'sha256');

        $response = $this->call('GET', $url)->getContent();
        $response = json_decode($response);
        $message = Lang::get('statuses.orbit.nodata.mall');

        $this->assertSame(Status::OK, (int)$response->code);
        $this->assertSame('success', (string)$response->status);
        $this->assertSame($message, (string)$response->message);
        $this->assertSame(0, (int)$response->data->total_records);
        $this->assertSame(0, (int)$response->data->returned_records);
        $this->assertTrue( is_null($response->data->records) );
    }


}
